{"version":3,"sources":["../../server/tests/util.server.test.js"],"names":["mailTemplate","describe","it","done","body","getHostname","test","messageBody","accountCreated","should","be","a","eql","resetPassword","eventCreated","startDate","format","eventApproved","eventRejected"],"mappings":";;AAAA;;;;AACA;;AACA;;IAAYA,Y;;;;;;AAEZC,SAAS,uBAAT,EAAkC,YAAM;AACtCC,KAAG,+CAAH,EAAoD,UAACC,IAAD,EAAU;AAC5D,QAAMC,iIACmBJ,aAAaK,WAAb,EADnB,+DAAN;AAEA,QAAMC,OAAON,aAAaO,WAAb,CAAyBC,cAAzB,CAAwC,MAAxC,EAAgD,UAAhD,CAAb;AACAF,SAAKG,MAAL,CAAYC,EAAZ,CAAeC,CAAf,CAAiB,QAAjB;AACAL,SAAKG,MAAL,CAAYC,EAAZ,CAAeE,GAAf,CAAmBR,IAAnB;AACAD;AACD,GAPD;;AASAD,KAAG,8CAAH,EAAmD,UAACC,IAAD,EAAU;AAC3D,QAAMC,0HACmBJ,aAAaK,WAAb,EADnB,8GAAN;AAGA,QAAMC,OAAON,aAAaO,WAAb,CAAyBM,aAAzB,CAAuC,MAAvC,EAA+C,UAA/C,CAAb;AACAP,SAAKG,MAAL,CAAYC,EAAZ,CAAeC,CAAf,CAAiB,QAAjB;AACAL,SAAKG,MAAL,CAAYC,EAAZ,CAAeE,GAAf,CAAmBR,IAAnB;AACAD;AACD,GARD;;AAUAD,KAAG,qDAAH,EAA0D,UAACC,IAAD,EAAU;AAClE,QAAMC,iMAAN;AAEA,QAAME,OAAON,aAAaO,WAAb,CAAyBO,YAAzB,CAAsC,MAAtC,CAAb;AACAR,SAAKG,MAAL,CAAYC,EAAZ,CAAeC,CAAf,CAAiB,QAAjB;AACAL,SAAKG,MAAL,CAAYC,EAAZ,CAAeE,GAAf,CAAmBR,IAAnB;AACAD;AACD,GAPD;;AASAD,KAAG,qDAAH,EAA0D,UAACC,IAAD,EAAU;AAClE,QAAMC,yVAAN;AAIA,QAAMW,YAAY,sBAAO,YAAP,EAAqBC,MAArB,CAA4B,cAA5B,CAAlB;AACA,QAAMV,OAAON,aAAaO,WAAb,CAAyBU,aAAzB,CAAuC,MAAvC,EAA+C,YAA/C,EAA6DF,SAA7D,CAAb;AACAT,SAAKG,MAAL,CAAYC,EAAZ,CAAeC,CAAf,CAAiB,QAAjB;AACAL,SAAKG,MAAL,CAAYC,EAAZ,CAAeE,GAAf,CAAmBR,IAAnB;AACAD;AACD,GAVD;;AAYAD,KAAG,qDAAH,EAA0D,UAACC,IAAD,EAAU;AAClE,QAAMC,ySAAN;AAIA,QAAMW,YAAY,sBAAO,YAAP,EAAqBC,MAArB,CAA4B,cAA5B,CAAlB;AACA,QAAMV,OAAON,aAAaO,WAAb,CAAyBW,aAAzB,CAAuC,MAAvC,EAA+C,YAA/C,EAA6DH,SAA7D,CAAb;AACAT,SAAKG,MAAL,CAAYC,EAAZ,CAAeC,CAAf,CAAiB,QAAjB;AACAL,SAAKG,MAAL,CAAYC,EAAZ,CAAeE,GAAf,CAAmBR,IAAnB;AACAD;AACD,GAVD;AAWD,CApDD","file":"util.server.test.js","sourcesContent":["import moment from 'moment';\nimport '../env.test';\nimport * as mailTemplate from '../config/mailTemplate';\n\ndescribe('Mail Message Template', () => {\n  it('should generate a message for new user accout', (done) => {\n    const body = `<p>Welcome user.</p><br/><p>Click the link below to complete your registration</p><br />\n                  <a href=\"${mailTemplate.getHostname()}/verified?token=1234567890\">Complete Registration</a><br/>`;\n    const test = mailTemplate.messageBody.accountCreated('user', 1234567890);\n    test.should.be.a('string');\n    test.should.be.eql(body);\n    done();\n  });\n\n  it('should generate a message for password reset', (done) => {\n    const body = `<p>Welcome user.</p><br/><p>Click the link below to reset your password</p><br />\n                  <a href=\"${mailTemplate.getHostname()}/reset-password?token=1234567890\">Reset Password</a><br/>\n                  This link expires in 15 mins`;\n    const test = mailTemplate.messageBody.resetPassword('user', 1234567890);\n    test.should.be.a('string');\n    test.should.be.eql(body);\n    done();\n  });\n\n  it('should generate a message when new event is created', (done) => {\n    const body = `<p>Well done user.</p><br/><p>You have successfully created an event.<br />You would get a response shortly from the event center\n                </p>Thank you for using EventsManager`;\n    const test = mailTemplate.messageBody.eventCreated('user');\n    test.should.be.a('string');\n    test.should.be.eql(body);\n    done();\n  });\n\n  it('should generate a message when an event is approved', (done) => {\n    const body = `<p>Hello user</p><br/>\n                <p> This is to inform you that your event in DisneyLand, scheduled for December 12th 2020 has been accepted by the center<br />\n                  You can now proceed with you planning.<br/>Do ensure to visit the center for more informations\n                </p>Thank you for using EventsManager`;\n    const startDate = moment('2020-12-12').format('MMMM Do YYYY');\n    const test = mailTemplate.messageBody.eventApproved('user', 'DisneyLand', startDate);\n    test.should.be.a('string');\n    test.should.be.eql(body);\n    done();\n  });\n\n  it('should generate a message when an event is rejected', (done) => {\n    const body = `<p>Hello user</p><br/>\n              <p> Unfortunately your event in DisneyLand, scheduled for December 12th 2020 has been cancelled by the center.<br />\n              However, The center would like you to reschedule your event<br/>\n              </p> Thank you for using EventsManager`;\n    const startDate = moment('2020-12-12').format('MMMM Do YYYY');\n    const test = mailTemplate.messageBody.eventRejected('user', 'DisneyLand', startDate);\n    test.should.be.a('string');\n    test.should.be.eql(body);\n    done();\n  });\n});\n\n"]}