{"version":3,"sources":["../../server/tests/center.server.test.js"],"names":["use","token","notAdminToken","centerID","validRequest","name","stateId","address","hallCapacity","carParkCapacity","facilities","price","image","validRequestForUpdate","requestBody","describe","it","done","request","post","send","email","password","end","err","res","body","Token","should","have","status","be","an","property","eql","set","message","errors","centerId","get","statusCode","data","metadata","put","response","updatedCenter","equal","delete","then","states","length"],"mappings":"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","file":"center.server.test.js","sourcesContent":["import chai from 'chai';\nimport chaiHttp from 'chai-http';\nimport '../env.test';\nimport app from '../server';\n\nchai.use(chaiHttp);\n\nlet token;\nlet notAdminToken;\nlet centerID;\n\nconst validRequest = {\n  name: 'Test Center',\n  stateId: 1,\n  address: '7, xyz avenue, ikaja',\n  hallCapacity: '600',\n  carParkCapacity: '200',\n  facilities: ['swimming pool', 'projectors', 'cctv', 'vip lounges'],\n  price: '1200000',\n  image: 'test/image/link'\n};\n\nconst validRequestForUpdate = {\n  name: 'The power space',\n  stateId: 1,\n  address: '7, abc avenue, ikeja',\n  hallCapacity: 600,\n  carParkCapacity: 200,\n  facilities: ['swimming pool', 'projectors', 'cctv', 'vip lounges'],\n  price: 1200000\n};\n\nconst requestBody = {\n  name: 'The power space',\n  image: 'path/to/image',\n};\n\ndescribe('Testing Api endpoints for centers', () => {\n  describe('POST /api/v1/centers', () => {\n    it('should return HTTP 200 when email and password are correct', (done) => {\n      chai.request(app)\n        .post('/api/v1/users/login')\n        .send({\n          email: 'segunmatthews@outlook.com',\n          password: 'minerva'\n        })\n        .end((err, res) => {\n          token = res.body.Token;\n          res.should.have.status(200);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message').eql('Authentication Is Successful!');\n          res.body.should.have.property('Token');\n          done();\n        });\n    });\n    it('should return HTTP 200 when email and password are correct for none admin user', (done) => {\n      chai.request(app)\n        .post('/api/v1/users/login')\n        .send({\n          email: 'voltron@mailinator.com',\n          password: 'minerva'\n        })\n        .end((err, res) => {\n          notAdminToken = res.body.Token;\n          res.should.have.status(200);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message').eql('Authentication Is Successful!');\n          res.body.should.have.property('Token');\n          done();\n        });\n    });\n    it('Should return HTTP status 400 and message for post without center name', (done) => {\n      chai.request(app)\n        .post('/api/v1/centers/')\n        .set('x-access-token', token)\n        .send({\n          stateId: 1,\n          address: '7, xyz avenue, ikaja',\n          hallCapacity: 600,\n          carParkCapacity: 200,\n          facilities: [['swimming pool, projectors, cctv, vip lounges']],\n          price: 1200000,\n          image: 'test/image/link'\n        })\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          res.body.message.should.have.property('errors');\n          res.body.message.errors.should.have.property('name');\n          res.body.message.errors.name.should.be.an('array');\n          res.body.message.errors.name[0].should.eql('The name field is required.');\n          done();\n        });\n    });\n    it('Should return HTTP status 400 and message for post without center stateId', (done) => {\n      chai.request(app)\n        .post('/api/v1/centers/')\n        .set('x-access-token', token)\n        .send({\n          name: 'The centers Place',\n          address: '7, xyz avenue, ikaja',\n          hallCapacity: 600,\n          carParkCapacity: 200,\n          facilities: [['swimming pool, projectors, cctv, vip lounges']],\n          price: 1200000,\n          image: 'test/image/link'\n        })\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          res.body.message.errors.should.have.property('stateId');\n          res.body.message.errors.stateId.should.be.an('array');\n          res.body.message.errors.stateId[0].should.eql('The stateId field is required.');\n          done();\n        });\n    });\n    it('Should return HTTP status 400 and message for post without center address', (done) => {\n      chai.request(app)\n        .post('/api/v1/centers/')\n        .set('x-access-token', token)\n        .send({\n          name: 'The centers Place',\n          stateId: 1,\n          // address: '7, xyz avenue, ikaja',\n          hallCapacity: 600,\n          carParkCapacity: 200,\n          facilities: ['swimming pool, projectors, cctv, vip lounges'],\n          price: 1200000,\n          image: 'test/image/link'\n        })\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          res.body.message.errors.should.have.property('address');\n          res.body.message.errors.address.should.be.an('array');\n          res.body.message.errors.address[0].should.eql('The address field is required.');\n          done();\n        });\n    });\n    it('Should return HTTP status 400 and message for post without center hallCapacity', (done) => {\n      chai.request(app)\n        .post('/api/v1/centers/')\n        .set('x-access-token', token)\n        .send({\n          name: 'The centers Place',\n          stateId: 1,\n          address: '7, xyz avenue, ikaja',\n          carParkCapacity: 200,\n          facilities: ['swimming pool, projectors, cctv, vip lounges'],\n          price: 1200000,\n          image: 'test/image/link'\n        })\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          res.body.message.errors.should.have.property('hallCapacity');\n          res.body.message.errors.hallCapacity.should.be.an('array');\n          res.body.message.errors.hallCapacity[0].should.eql('The hallCapacity field is required.');\n          done();\n        });\n    });\n\n    it('Should return HTTP status 400 and message for post without center carParkCapacity', (done) => {\n      chai.request(app)\n        .post('/api/v1/centers/')\n        .set('x-access-token', token)\n        .send({\n          name: 'The centers Place',\n          stateId: 1,\n          address: '7, xyz avenue, ikaja',\n          hallCapacity: 600,\n          facilities: ['swimming pool, projectors, cctv, vip lounges'],\n          price: 1200000,\n          image: 'test/image/link'\n        })\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          res.body.message.errors.should.have.property('carParkCapacity');\n          res.body.message.errors.carParkCapacity.should.be.an('array');\n          res.body.message.errors.carParkCapacity[0].should.eql('The carParkCapacity field is required.');\n          done();\n        });\n    });\n    it('Should return HTTP status 400 and message for post without center price', (done) => {\n      chai.request(app)\n        .post('/api/v1/centers/')\n        .set('x-access-token', token)\n        .send({\n          name: 'The centers Place',\n          stateId: 1,\n          address: '7, xyz avenue, ikaja',\n          hallCapacity: 600,\n          carParkCapacity: 200,\n          facilities: ['swimming pool, projectors, cctv, vip lounges'],\n          image: 'test/image/link'\n        })\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          res.body.message.errors.should.have.property('price');\n          res.body.message.errors.price.should.be.an('array');\n          res.body.message.errors.price[0].should.eql('The price field is required.');\n          done();\n        });\n    });\n\n    it('Should return HTTP status 400 and message for post if center name exceeds 30 chatacters', (done) => {\n      chai.request(app)\n        .post('/api/v1/centers/')\n        .set('x-access-token', token)\n        .send({\n          name: 'The centers Place where magic happens and you never forget',\n          stateId: 1,\n          address: '7, xyz avenue, ikaja',\n          hallCapacity: 600,\n          carParkCapacity: 200,\n          facilities: ['swimming pool, projectors, cctv, vip lounges'],\n          price: 1200000,\n          image: 'test/image/link'\n        })\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          res.body.message.errors.should.have.property('name');\n          res.body.message.errors.name.should.be.an('array');\n          done();\n        });\n    });\n\n    it('Should return HTTP 400 if center address is not up to 10 characters', (done) => {\n      chai.request(app)\n        .post('/api/v1/centers/')\n        .set('x-access-token', token)\n        .send({\n          name: 'The power house',\n          stateId: 1,\n          address: '7, xyz',\n          hallCapacity: '600',\n          carParkCapacity: '200',\n          facilities: ['swimming pool, projectors, cctv, vip lounges'],\n          price: '1200000',\n          image: 'test/image/link'\n        })\n        .end((err, res) => {\n          centerID = res.body.centerId;\n          res.should.have.status(400);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          res.body.message.errors.should.have.property('address');\n          res.body.message.errors.address.should.be.an('array');\n          done();\n        });\n    });\n\n    // =====VALID INPUT====== //\n\n    it('Should return HTTP 401 with response object when user is not an admin', (done) => {\n      chai.request(app)\n        .post('/api/v1/centers/')\n        .set('x-access-token', notAdminToken)\n        .send(validRequest)\n        .end((err, res) => {\n          res.should.have.status(401);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message').eql('This user is not an administrator');\n          done();\n        });\n    });\n\n    it('Should return HTTP 201 with response object when all fields pass validation and user is admin', (done) => {\n      chai.request(app)\n        .post('/api/v1/centers/')\n        .set('x-access-token', token)\n        .send(validRequest)\n        .end((err, res) => {\n          centerID = res.body.centerId;\n          res.should.have.status(201);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message').eql('New Center Created');\n          res.body.should.have.property('centerId');\n          res.body.should.have.property('statusCode');\n          done();\n        });\n    });\n  });\n\n  describe('GET /api/v1/centers', () => {\n    // Testing  to get all centers\n    it('Should return 200 with an array of all centers', (done) => {\n      chai.request(app)\n        .get('/api/v1/centers/')\n        .set('x-access-token', token)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('message');\n          res.body.should.have.property('statusCode');\n          res.body.should.have.property('data');\n          res.body.should.have.property('metadata');\n          res.body.message.should.eql('Centers Retrieved');\n          res.body.statusCode.should.eql(200);\n          res.body.data.should.an('array');\n          res.body.metadata.should.be.an('object');\n          res.body.metadata.should.have.property('pagination');\n          done();\n        });\n    });\n\n    // Testing  to get all centers with query\n    it('Should return 200 with an array of all centers that match query', (done) => {\n      chai.request(app)\n        .get('/api/v1/centers?state=1&search=test&capacity=600&facilities[]=cctv')\n        .set('x-access-token', token)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.have.property('message');\n          res.body.should.have.property('statusCode');\n          res.body.should.have.property('data');\n          res.body.should.have.property('metadata');\n          res.body.message.should.eql('Centers Retrieved');\n          res.body.statusCode.should.eql(200);\n          res.body.data.should.an('array');\n          res.body.metadata.should.be.an('object');\n          res.body.metadata.should.have.property('pagination');\n          done();\n        });\n    });\n  });\n\n  describe('GET /api/v1/centers/:centerId', () => {\n    // Testing to get all centers\n    it('Should return 404 if center is not found', (done) => {\n      chai.request(app)\n        .get(`/api/v1/centers/${-1}`)\n        .set('x-access-token', token)\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          res.body.message.should.eql('Center Not Found');\n          done();\n        });\n    });\n\n    it('Should return 200 with center object requested for', (done) => {\n      chai.request(app)\n        .get(`/api/v1/centers/${centerID}/`)\n        .set('x-access-token', token)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.an('object');\n          done();\n        });\n    });\n  });\n\n\n  describe('PUT /api/v1/centers/:id', () => {\n    it('Should return HTTP 401 with response object when user is not an admin', (done) => {\n      chai.request(app)\n        .put(`/api/v1/centers/${centerID}/`)\n        .set('x-access-token', notAdminToken)\n        .send({\n          name: 'The power spot',\n          stateId: 1,\n          address: '7, xyz avenue, ikaja',\n          hallCapacity: '600',\n          carParkCapacity: '200',\n          facilities: ['swimming pool, projectors, cctv, vip lounges'],\n          price: '1200000',\n          image: 'test/image/link'\n        })\n        .end((err, res) => {\n          res.should.have.status(401);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message').eql('This user is not an administrator');\n          done();\n        });\n    });\n\n    it('Should return HTTP status 400 and message if center name exceeds or less than 30 chatacters', (done) => {\n      chai.request(app)\n        .put(`/api/v1/centers/${centerID}/`)\n        .set('x-access-token', token)\n        .send({\n          name: 'Ao',\n          stateId: 1,\n          address: '7, abc avenue, ikeja',\n          hallCapacity: '600',\n          carParkCapacity: '200',\n          facilities: ['swimming pool, projectors, cctv, vip lounges'],\n          price: '1200000'\n        })\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          res.body.message.errors.should.have.property('name');\n          res.body.message.errors.name.should.be.an('array');\n          done();\n        });\n    });\n\n    it('Should return 404 if center is not found', (done) => {\n      chai.request(app)\n        .put(`/api/v1/centers/${-1}/`)\n        .set('x-access-token', token)\n        .send({\n          name: 'The power space',\n          stateId: 1,\n          address: '7, abc avenue, ikeja',\n          hallCapacity: 600,\n          carParkCapacity: 200,\n          facilities: ['swimming pool, projectors, cctv, vip lounges'],\n          price: 1200000\n        })\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          res.body.message.should.eql('center does not exist');\n          done();\n        });\n    });\n\n    it('Should return 400 if centerId is not a number', (done) => {\n      chai.request(app)\n        .put('/api/v1/centers/jbkbkkkhvk/')\n        .set('x-access-token', token)\n        .send({\n          name: 'The power space',\n          stateId: 1,\n          address: '7, abc avenue, ikeja',\n          hallCapacity: '600',\n          carParkCapacity: '200',\n          facilities: ['swimming pool, projectors, cctv, vip lounges'],\n          price: '1200000'\n        })\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          res.body.message.should.eql('Invalid centerId');\n          done();\n        });\n    });\n\n    it('Should return 200 with modified center', (done) => {\n      chai.request(app)\n        .put(`/api/v1/centers/${centerID}/`)\n        .set('x-access-token', token)\n        .send(validRequestForUpdate)\n        .end((err, res) => {\n          const response = res.body.updatedCenter;\n          res.should.have.status(200);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          res.body.should.have.property('updatedCenter');\n          response.name.should.equal(validRequestForUpdate.name);\n          response.address.should.equal(validRequestForUpdate.address);\n          response.stateId.should.equal(validRequestForUpdate.stateId);\n          response.carParkCapacity.should.equal(validRequestForUpdate.carParkCapacity);\n          response.hallCapacity.should.equal(validRequestForUpdate.hallCapacity);\n          response.price.should.equal(validRequestForUpdate.price);\n          done();\n        });\n    });\n\n    it('Should return 200 with modified center', (done) => {\n      chai.request(app)\n        .put(`/api/v1/centers/${centerID}/`)\n        .set('x-access-token', token)\n        .send(requestBody)\n        .end((err, res) => {\n          const response = res.body.updatedCenter;\n          res.should.have.status(200);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          res.body.should.have.property('updatedCenter');\n          response.name.should.equal(requestBody.name);\n          response.image.should.equal(requestBody.image);\n          done();\n        });\n    });\n\n    it('Should return 200 with modified center event if request body has no name field ', (done) => {\n      const request = {\n        stateId: 1,\n        address: '7, abc avenue, lagos-island',\n        hallCapacity: '600',\n        carParkCapacity: '400',\n        facilities: ['swimming pool, projectors, cctv, vip lounges'],\n        price: '1200000'\n      };\n\n      chai.request(app)\n        .put(`/api/v1/centers/${centerID}/`)\n        .set('x-access-token', token)\n        .send(request)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          res.body.should.have.property('updatedCenter');\n          res.body.updatedCenter.stateId.should.equal(request.stateId);\n          res.body.updatedCenter.address.should.equal(request.address);\n          done();\n        });\n    });\n  });\n\n  describe('DELETE /api/v1/centers/:id', () => {\n    // Testing to modify an center\n    it('Should return 404 if center does not exist', (done) => {\n      chai.request(app)\n        .delete(`/api/v1/centers/${-1}/`)\n        .set('x-access-token', token)\n        .end((err, res) => {\n          res.should.have.status(404);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          done();\n        });\n    });\n\n    it('Should return 200 if center is deleted', (done) => {\n      chai.request(app)\n        .delete(`/api/v1/centers/${centerID}/`)\n        .set('x-access-token', token)\n        .end((err, res) => {\n          res.should.have.status(200);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          done();\n        });\n    });\n\n    it('Should return 500 if centerId not a number', (done) => {\n      chai.request(app)\n        .delete('/api/v1/centers/houwhgouwhgw/')\n        .set('x-access-token', token)\n        .end((err, res) => {\n          res.should.have.status(400);\n          res.body.should.be.an('object');\n          res.body.should.have.property('message');\n          res.body.should.have.property('statusCode');\n          res.body.message.should.eql('Invalid centerId');\n          res.body.statusCode.should.eql(400);\n          done();\n        });\n    });\n  });\n});\n\ndescribe('Testing API endpoint for states', () => {\n  it('should a list of states', (done) => {\n    chai.request(app)\n      .get('/api/v1/states')\n      .then((res) => {\n        res.should.have.status(200);\n        res.body.should.be.an('object');\n        res.body.should.have.property('message');\n        res.body.message.should.eql('States Retrieved');\n        res.body.should.have.property('statusCode');\n        res.body.statusCode.should.eql(200);\n        res.body.should.have.property('states');\n        res.body.states.should.be.an('array');\n        res.body.states.length.should.eql(37);\n        done();\n      });\n  });\n});\n"]}