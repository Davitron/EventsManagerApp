{"version":3,"sources":["../../server/models/index.js"],"names":["basename","__filename","env","process","NODE_ENV","envConfig","db","sequelize","use_env_variable","database","username","password","readdirSync","__dirname","filter","file","indexOf","slice","forEach","model","import","join","name","Object","keys","modelName","associate","Sequelize","module","exports"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA,IAAMA,WAAW,eAAKA,QAAL,CAAcC,UAAd,CAAjB;AACA,IAAMC,MAAMC,QAAQD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;;AAEA,IAAMC,YAAY,iBAAOH,GAAP,CAAlB;AACA,IAAMI,KAAK,EAAX;;AAEA,IAAIC,kBAAJ;AACA,IAAIF,UAAUG,gBAAd,EAAgC;AAC9BD,cAAY,wBAAcJ,QAAQD,GAAR,CAAYG,UAAUG,gBAAtB,CAAd,EAAuDH,SAAvD,CAAZ;AACD,CAFD,MAEO;AACLE,cAAY,wBAAcF,UAAUI,QAAxB,EAAkCJ,UAAUK,QAA5C,EAAsDL,UAAUM,QAAhE,EAA0EN,SAA1E,CAAZ;AACD;;AAED,aACGO,WADH,CACeC,SADf,EAEGC,MAFH,CAEU;AAAA,SAASC,KAAKC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,SAASf,QAAvC,IAAqDe,KAAKE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAAhF;AAAA,CAFV,EAGGC,OAHH,CAGW,UAACH,IAAD,EAAU;AACjB,MAAMI,QAAQZ,UAAUa,MAAV,CAAiB,eAAKC,IAAL,CAAUR,SAAV,EAAqBE,IAArB,CAAjB,CAAd;AACAT,KAAGa,MAAMG,IAAT,IAAiBH,KAAjB;AACD,CANH;;AASAI,OAAOC,IAAP,CAAYlB,EAAZ,EAAgBY,OAAhB,CAAwB,UAACO,SAAD,EAAe;AACrC,MAAInB,GAAGmB,SAAH,EAAcC,SAAlB,EAA6B;AAC3BpB,OAAGmB,SAAH,EAAcC,SAAd,CAAwBpB,EAAxB;AACD;AACF,CAJD;;AAMAA,GAAGC,SAAH,GAAeA,SAAf;AACAD,GAAGqB,SAAH;;AAEAC,OAAOC,OAAP,GAAiBvB,EAAjB","file":"index.js","sourcesContent":["import fs from 'fs';\nimport path from 'path';\nimport Sequelize from 'sequelize';\nimport config from '../config/config.json';\n\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\n\nconst envConfig = config[env];\nconst db = {};\n\nlet sequelize;\nif (envConfig.use_env_variable) {\n  sequelize = new Sequelize(process.env[envConfig.use_env_variable], envConfig);\n} else {\n  sequelize = new Sequelize(envConfig.database, envConfig.username, envConfig.password, envConfig);\n}\n\nfs\n  .readdirSync(__dirname)\n  .filter(file => (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js'))\n  .forEach((file) => {\n    const model = sequelize.import(path.join(__dirname, file));\n    db[model.name] = model;\n  });\n\n\nObject.keys(db).forEach((modelName) => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\n\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\n\nmodule.exports = db;\n"]}