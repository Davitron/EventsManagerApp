{"version":3,"sources":["../../server/models/event.js"],"names":["module","exports","sequelize","DataTypes","Event","define","eventName","type","STRING","allowNull","startDate","DATE","image","endDate","days","INTEGER","centerId","userId","status","ENUM","defaultValue","associate","models","belongsTo","User","foreignKey","onDelete","as","Center"],"mappings":";;AAAAA,OAAOC,OAAP,GAAiB,UAACC,SAAD,EAAYC,SAAZ,EAA0B;AACzC,MAAMC,QAAQF,UAAUG,MAAV,CAAiB,OAAjB,EAA0B;AACtCC,eAAW;AACTC,YAAMJ,UAAUK,MADP;AAETC,iBAAW;AAFF,KAD2B;AAKtCC,eAAW;AACTH,YAAMJ,UAAUQ,IADP;AAETF,iBAAW;AAFF,KAL2B;AAStCG,WAAO;AACLL,YAAMJ,UAAUK,MADX;AAELC,iBAAW;AAFN,KAT+B;AAatCI,aAAS;AACPN,YAAMJ,UAAUQ,IADT;AAEPF,iBAAW;AAFJ,KAb6B;AAiBtCK,UAAM;AACJP,YAAMJ,UAAUY,OADZ;AAEJN,iBAAW;AAFP,KAjBgC;AAqBtCO,cAAU;AACRT,YAAMJ,UAAUY,OADR;AAERN,iBAAW;AAFH,KArB4B;AAyBtCQ,YAAQ;AACNV,YAAMJ,UAAUY,OADV;AAENN,iBAAW;AAFL,KAzB8B;AA6BtCS,YAAQ;AACNT,iBAAW,KADL;AAENF,YAAMJ,UAAUgB,IAAV,CAAe,SAAf,EAA0B,UAA1B,EAAsC,WAAtC,EAAmD,UAAnD,CAFA;AAGNC,oBAAc;AAHR;AA7B8B,GAA1B,CAAd;AAmCAhB,QAAMiB,SAAN,GAAkB,UAACC,MAAD,EAAY;AAC5BlB,UAAMmB,SAAN,CAAgBD,OAAOE,IAAvB,EAA6B;AAC3BC,kBAAY,QADe;AAE3BC,gBAAU,SAFiB;AAG3BC,UAAI;AAHuB,KAA7B;AAKAvB,UAAMmB,SAAN,CAAgBD,OAAOM,MAAvB,EAA+B;AAC7BH,kBAAY,UADiB;AAE7BC,gBAAU,SAFmB;AAG7BC,UAAI;AAHyB,KAA/B;AAKD,GAXD;AAYA,SAAOvB,KAAP;AACD,CAjDD","file":"event.js","sourcesContent":["module.exports = (sequelize, DataTypes) => {\n  const Event = sequelize.define('Event', {\n    eventName: {\n      type: DataTypes.STRING,\n      allowNull: false\n    },\n    startDate: {\n      type: DataTypes.DATE,\n      allowNull: false\n    },\n    image: {\n      type: DataTypes.STRING,\n      allowNull: true\n    },\n    endDate: {\n      type: DataTypes.DATE,\n      allowNull: false\n    },\n    days: {\n      type: DataTypes.INTEGER,\n      allowNull: false\n    },\n    centerId: {\n      type: DataTypes.INTEGER,\n      allowNull: false\n    },\n    userId: {\n      type: DataTypes.INTEGER,\n      allowNull: false\n    },\n    status: {\n      allowNull: false,\n      type: DataTypes.ENUM('pending', 'accepted', 'cancelled', 'rejected'),\n      defaultValue: 'pending'\n    },\n  });\n  Event.associate = (models) => {\n    Event.belongsTo(models.User, {\n      foreignKey: 'userId',\n      onDelete: 'CASCADE',\n      as: 'user'\n    });\n    Event.belongsTo(models.Center, {\n      foreignKey: 'centerId',\n      onDelete: 'CASCADE',\n      as: 'center'\n    });\n  };\n  return Event;\n};\n"]}