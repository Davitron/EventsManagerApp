{"version":3,"sources":["../../server/config/mailTemplate.js"],"names":["getHostname","process","env","NODE_ENV","DEVELOPMENT_HOSTURL","PRODUCTION_HOSTURL","TEST_HOSTURL","hostLink","link","messageBody","accountCreated","username","token","host","body","resetPassword","eventCreated","eventApproved","centerName","startDate","eventRejected"],"mappings":";;;;;AACO,IAAMA,oCAAc,SAAdA,WAAc,GAAM;AAC/B,MAAIC,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C,OAAOF,QAAQC,GAAR,CAAYE,mBAAnB;AAC5C,MAAIH,QAAQC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C,OAAOF,QAAQC,GAAR,CAAYG,kBAAnB;AAC3C,SAAOJ,QAAQC,GAAR,CAAYI,YAAnB;AACD,CAJM;;AAMP,IAAIC,iBAAJ;AACA,IAAIC,aAAJ;;AAEO,IAAMC,oCAAc;AACzBC,kBAAgB,wBAACC,QAAD,EAAWC,KAAX,EAAkBC,IAAlB,EAA2B;AACzCN,eAAWM,QAAQZ,QAAQC,GAAR,CAAYI,YAA/B;AACAE,WAAUD,QAAV,wBAAqCK,KAArC;AACA,QAAME,uBAAqBH,QAArB,8GACmBH,IADnB,qCAAN;AAEA,WAAOM,IAAP;AACD,GAPwB;;AASzBC,iBAAe,uBAACJ,QAAD,EAAWC,KAAX,EAAkBC,IAAlB,EAA2B;AACxCN,eAAWM,QAAQZ,QAAQC,GAAR,CAAYI,YAA/B;AACAE,WAAUD,QAAV,8BAA2CK,KAA3C;AACA,QAAME,uBAAqBH,QAArB,uGACmBH,IADnB,8EAAN;AAGA,WAAOM,IAAP;AACD,GAhBwB;;AAkBzBE,gBAAc,sBAACL,QAAD,EAAc;AAC1B,QAAMG,yBAAuBH,QAAvB,4KAAN;AAEA,WAAOG,IAAP;AACD,GAtBwB;;AAwBzBG,iBAAe,uBAACN,QAAD,EAAWO,UAAX,EAAuBC,SAAvB,EAAqC;AAClD,QAAML,qBAAmBH,QAAnB,gFACqDO,UADrD,wBACkFC,SADlF,oNAAN;;AAKA,WAAOL,IAAP;AACD,GA/BwB;;AAiCzBM,iBAAe,uBAACT,QAAD,EAAWO,UAAX,EAAuBC,SAAvB,EAAqC;AAClD,QAAML,qBAAmBH,QAAnB,iEACsCO,UADtC,wBACmEC,SADnE,mLAAN;AAIA,WAAOL,IAAP;AACD;AAvCwB,CAApB","file":"mailTemplate.js","sourcesContent":["\nexport const getHostname = () => {\n  if (process.env.NODE_ENV === 'development') return process.env.DEVELOPMENT_HOSTURL;\n  if (process.env.NODE_ENV === 'production') return process.env.PRODUCTION_HOSTURL;\n  return process.env.TEST_HOSTURL;\n};\n\nlet hostLink;\nlet link;\n\nexport const messageBody = {\n  accountCreated: (username, token, host) => {\n    hostLink = host || process.env.TEST_HOSTURL;\n    link = `${hostLink}/verified?token=${token}`;\n    const body = `<p>Welcome ${username}.</p><br/><p>Click the link below to complete your registration</p><br />\n                  <a href=\"${link}\">Complete Registration</a><br/>`;\n    return body;\n  },\n\n  resetPassword: (username, token, host) => {\n    hostLink = host || process.env.TEST_HOSTURL;\n    link = `${hostLink}/reset-password?token=${token}`;\n    const body = `<p>Welcome ${username}.</p><br/><p>Click the link below to reset your password</p><br />\n                  <a href=\"${link}\">Reset Password</a><br/>\n                  This link expires in 15 mins`;\n    return body;\n  },\n\n  eventCreated: (username) => {\n    const body = `<p>Well done ${username}.</p><br/><p>You have successfully created an event.<br />You would get a response shortly from the event center\n                </p>Thank you for using EventsManager`;\n    return body;\n  },\n\n  eventApproved: (username, centerName, startDate) => {\n    const body = `<p>Hello ${username}</p><br/>\n                <p> This is to inform you that your event in ${centerName}, scheduled for ${startDate} has been accepted by the center<br />\n                  You can now proceed with you planning.<br/>Do ensure to visit the center for more informations\n                </p>Thank you for using EventsManager`;\n\n    return body;\n  },\n\n  eventRejected: (username, centerName, startDate) => {\n    const body = `<p>Hello ${username}</p><br/>\n              <p> Unfortunately your event in ${centerName}, scheduled for ${startDate} has been cancelled by the center.<br />\n              However, The center would like you to reschedule your event<br/>\n              </p> Thank you for using EventsManager`;\n    return body;\n  }\n};\n"]}