{
    "swagger": "2.0",
    "info": {
      "version": "1.0.0",
      "title": "Events Manager",
      "description": " API documetation for an event management system"
    },
    "host": "event-manager-andela.herokuapp.com",
    "basePath": "/api/v1",
    "schemes": [
      "http",
      "https"
    ],
    "securityDefinitions": {
      "UserToken": {
        "type": "apiKey",
        "in": "header",
        "name": "x-access-token"
      }
    },
    "paths": {
      "/users/login": {
        "post": {
          "tags": ["User"],
          "summary": "Authenticates a user",
          "description": "Authenticates a new user by cross checking the database",
          "parameters": [{
            "in": "formData",
            "name": "email",
            "type": "string",
            "format": "email",
            "required": true
          },
          {
            "in": "formData",
            "name": "password",
            "type": "string",
            "format": "password",
            "required": true
          }],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Password Mismatch"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/users": {
        "post": {
          "tags": ["User"],
          "summary": "Create new user",
          "description": "Registers a user and stores it to the database.",
          "parameters": [{
            "in": "formData",
            "name": "email",
            "type": "string",
            "format": "email",
            "required": true
          },
          {
            "in": "formData",
            "name": "username",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "password",
            "type": "string",
            "format": "password",
            "required": true
          },
          {
            "in": "formData",
            "name": "confirmPassword",
            "type": "string",
            "format": "password",
            "required": true
          }],
          "responses": {
            "201": {
              "description": "Created"
            },
            "400": {
              "description": "Bad Request"
            },
            "401": {
              "description": "Password Mismatch"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/events": {
        "post": {
          "tags": ["Events"],
          "summary": "Creates a new event",
          "description": "Creates a new events and stores it to the database.",
          "security": [{
            "UserToken": []
          }],
          "parameters": [{
            "in": "formData",
            "name": "eventName",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "startDate",
            "type": "string",
            "format": "date",
            "required": true
          },
          {
            "in": "formData",
            "name": "days",
            "type": "string",
            "format": "number",
            "required": true
          },
          {
            "in": "formData",
            "name": "image",
            "type": "string",
            "required": true
          }],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "403": {
              "description": "No Token Provided"
            },
            "500": {
              "description": "Server Error"
            }
          }
        },
        "get": {
          "tags": ["Events"],
          "summary": "gets all event",
          "description": "gets all events the database.",
          "security": [{
            "UserToken": []
          }],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/events/{id}": {
        "put": {
          "tags": ["Events"],
          "summary": "Update an event",
          "description": "Update an existing event in the database.",
          "security": [{
            "UserToken": []
          }],
          "parameters": [{
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "The event to update.",
            "schema": {
              "$ref": "#/definitions/Event"
            }
            },
            {
              "in": "formData",
              "name": "eventName",
              "type": "string"
            },
            {
              "in": "formData",
              "name": "startDate",
              "type": "string",
              "format": "date"
            },
            {
              "in": "formData",
              "name": "days",
              "type": "string",
              "format": "number"
            },
            {
              "in": "formData",
              "name": "image",
              "type": "string"
            }],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "403": {
              "description": "No token provided"
            },
            "500": {
              "description": "Server Error"
            }
          }
        },
        "delete": {
          "tags": ["Events"],
          "summary": "Delete an event",
          "description": "Delete an existing event from the database.",
          "security": [{
            "UserToken": []
          }],
          "parameters": [{
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "The event to delete."
          }],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "403": {
              "description": "No token provided"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/centers": {
        "post": {
          "tags": ["Centers"],
          "summary": "Creates a center",
          "description": "Creates a new center and stores to the database.",
          "security": [{
            "UserToken": []
          }],
          "parameters": [{
            "in": "formData",
            "name": "name",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "address",
            "type": "string",
            "required": true
          },
          {
            "in": "formData",
            "name": "price",
            "type": "string",
            "format": "number",
            "required": true
          },
          {
            "in": "formData",
            "name": "stateId",
            "type": "string",
            "format": "number",
            "required": true
          },
          {
            "in": "formData",
            "name": "hallCapacity",
            "type": "string",
            "format": "number",
            "required": true
          },
          {
            "in": "formData",
            "name": "carParkCapacity",
            "type": "string",
            "format": "number",
            "required": true
          },
          {
            "in": "formData",
            "name": "facilities",
            "type": "array",
            "required": true,
            "items": {
              "type": "string"
            }
          },
          {
            "in": "formData",
            "name": "image",
            "type": "string",
            "required": true
          }],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "403": {
              "description": "No token provided"
            },
            "500": {
              "description": "Server Error"
            }
          }
        },
        "get": {
          "tags": ["Centers"],
          "summary": "Gets all center",
          "description": "gets all center and adds to the database.",
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "403": {
              "description": "No token provided"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      },
      "/centers/{id}": {
        "get": {
          "tags": ["Centers"],
          "summary": "gets a single center",
          "description": "gets a center and adds to the database.",
          "parameters": [{
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "The event to retrieve."
          }],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "403": {
              "description": "No token provided"
            },
            "500": {
              "description": "Server Error"
            }
          }
        },
        "put": {
          "tags": ["Centers"],
          "summary": "Modifies a center",
          "description": "modifies a center and saves it to the database.",
          "security": [{
            "UserToken": []
          }],
          "parameters": [{
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "The center to update.",
            "schema": {
              "$ref": "#/definitions/Center"
            }
          },
          {
            "in": "formData",
            "name": "name",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "address",
            "type": "string"
          },
          {
            "in": "formData",
            "name": "price",
            "type": "string",
            "format": "number"
          },
          {
            "in": "formData",
            "name": "stateId",
            "type": "string",
            "format": "number"
          },
          {
            "in": "formData",
            "name": "hallCapacity",
            "type": "string",
            "format": "number"
          },
          {
            "in": "formData",
            "name": "carParkCapacity",
            "type": "string",
            "format": "number"
          },
          {
            "in": "formData",
            "name": "facilities",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          {
            "in": "formData",
            "name": "image",
            "type": "string"
          }],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "403": {
              "description": "No token provided"
            },
            "500": {
              "description": "Server Error"
            }
          }
        },
        "delete": {
          "tags": ["Centers"],
          "summary": "Deletes a center",
          "description": "deletes a center from the database",
          "security": [{
            "UserToken": []
          }],
          "parameters": [{
            "name": "id",
            "in": "path",
            "type": "integer",
            "description": "The center to delete.",
            "schema": {
              "$ref": "#/definitions/Center"
            }
          }],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Bad Request"
            },
            "403": {
              "description": "No token provided"
            },
            "500": {
              "description": "Server Error"
            }
          }
        }
      }
    },
    "definitions": {
      "User": {
        "required": [
          "email",
          "username",
          "password",
          "confirmPassword"
        ],
        "properties": {
          "email": {
            "type": "string",
            "uniqueItems": true
          },
          "username": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "confirmPassword": {
            "type": "string"
          },
          "isAdmin": {
            "type": "boolean"
          }
        }
      },
      "UserAuthCredentials": {
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "uniqueItems": true
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Event": {
        "required": [
          "name",
          "location",
          "startDate",
          "days",
          "centerId"
        ],
        "properties": {
          "eventName": {
            "type": "string"
          },
          "centerId": {
            "type": "integer"
          },
          "startDate": {
            "type": "string"
          },
          "days": {
            "type": "integer"
          },
          "image": {
            "type": "string"
          }
        }
      },
      "Center": {
        "required": [
          "name",
          "stateId",
          "address",
          "facilities",
          "hallCapacity",
          "carParkCapacity",
          "price",
          "image"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "stateId": {
            "type": "integer"
          },
          "address": {
            "type": "integer"
          },
          "facilities": {
            "type": "array"
          },
          "hallCapacity": {
            "type": "integer"
          },
          "carParkCapacity": {
            "type": "integer"
          },
          "price": {
            "type": "integer"
          },
          "image": {
            "type": "string"
          }
        }
      }
    }
  }
  