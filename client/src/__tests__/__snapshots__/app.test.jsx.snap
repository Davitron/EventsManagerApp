// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Event Component component successfully rendered 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <App />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": <div>
        <Connect(Header) />
        <Switch>
          <Route
            component={[Function]}
            exact={true}
            path="/"
          />
          <Route
            component={[Function]}
            exact={true}
            path="/register"
          />
          <Route
            component={[Function]}
            exact={true}
            path="/login"
          />
          <Route
            component={[Function]}
            exact={true}
            path="/forgot-password"
          />
          <Route
            component={[Function]}
            exact={true}
            path="/reset-password"
          />
          <Route
            component={[Function]}
            exact={true}
            path="/verify"
          />
          <Route
            component={[Function]}
            exact={true}
            path="/verified"
          />
          <Route
            component={[Function]}
            exact={true}
            path="/centers/:centerId"
          />
          <Route
            component={[Function]}
            exact={true}
            path="/centers"
          />
          <UserRoute
            component={[Function]}
            exact={true}
            path="/events"
            redirectPath="/login"
          />
          <UserRoute
            component={[Function]}
            exact={true}
            path="/pending-events"
            redirectPath="/login"
          />
          <Route
            component={[Function]}
          />
        </Switch>
      </div>,
      "history": Object {
        "action": "POP",
        "block": [Function],
        "createHref": [Function],
        "go": [Function],
        "goBack": [Function],
        "goForward": [Function],
        "length": 1,
        "listen": [Function],
        "location": Object {
          "hash": "",
          "pathname": "blank",
          "search": "",
          "state": undefined,
        },
        "push": [Function],
        "replace": [Function],
      },
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <Connect(Header) />,
          <Switch>
            <Route
              component={[Function]}
              exact={true}
              path="/"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/register"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/login"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/forgot-password"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/reset-password"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/verify"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/verified"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/centers/:centerId"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/centers"
            />
            <UserRoute
              component={[Function]}
              exact={true}
              path="/events"
              redirectPath="/login"
            />
            <UserRoute
              component={[Function]}
              exact={true}
              path="/pending-events"
              redirectPath="/login"
            />
            <Route
              component={[Function]}
            />
          </Switch>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {},
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": Array [
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />,
              <Route
                component={[Function]}
                exact={true}
                path="/register"
              />,
              <Route
                component={[Function]}
                exact={true}
                path="/login"
              />,
              <Route
                component={[Function]}
                exact={true}
                path="/forgot-password"
              />,
              <Route
                component={[Function]}
                exact={true}
                path="/reset-password"
              />,
              <Route
                component={[Function]}
                exact={true}
                path="/verify"
              />,
              <Route
                component={[Function]}
                exact={true}
                path="/verified"
              />,
              <Route
                component={[Function]}
                exact={true}
                path="/centers/:centerId"
              />,
              <Route
                component={[Function]}
                exact={true}
                path="/centers"
              />,
              <UserRoute
                component={[Function]}
                exact={true}
                path="/events"
                redirectPath="/login"
              />,
              <UserRoute
                component={[Function]}
                exact={true}
                path="/pending-events"
                redirectPath="/login"
              />,
              <Route
                component={[Function]}
              />,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/register",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/login",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/forgot-password",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/reset-password",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/verify",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/verified",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/centers/:centerId",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/centers",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/events",
                "redirectPath": "/login",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "component": [Function],
                "exact": true,
                "path": "/pending-events",
                "redirectPath": "/login",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "component": [Function],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": <div>
          <Connect(Header) />
          <Switch>
            <Route
              component={[Function]}
              exact={true}
              path="/"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/register"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/login"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/forgot-password"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/reset-password"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/verify"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/verified"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/centers/:centerId"
            />
            <Route
              component={[Function]}
              exact={true}
              path="/centers"
            />
            <UserRoute
              component={[Function]}
              exact={true}
              path="/events"
              redirectPath="/login"
            />
            <UserRoute
              component={[Function]}
              exact={true}
              path="/pending-events"
              redirectPath="/login"
            />
            <Route
              component={[Function]}
            />
          </Switch>
        </div>,
        "history": Object {
          "action": "POP",
          "block": [Function],
          "createHref": [Function],
          "go": [Function],
          "goBack": [Function],
          "goForward": [Function],
          "length": 1,
          "listen": [Function],
          "location": Object {
            "hash": "",
            "pathname": "blank",
            "search": "",
            "state": undefined,
          },
          "push": [Function],
          "replace": [Function],
        },
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Connect(Header) />,
            <Switch>
              <Route
                component={[Function]}
                exact={true}
                path="/"
              />
              <Route
                component={[Function]}
                exact={true}
                path="/register"
              />
              <Route
                component={[Function]}
                exact={true}
                path="/login"
              />
              <Route
                component={[Function]}
                exact={true}
                path="/forgot-password"
              />
              <Route
                component={[Function]}
                exact={true}
                path="/reset-password"
              />
              <Route
                component={[Function]}
                exact={true}
                path="/verify"
              />
              <Route
                component={[Function]}
                exact={true}
                path="/verified"
              />
              <Route
                component={[Function]}
                exact={true}
                path="/centers/:centerId"
              />
              <Route
                component={[Function]}
                exact={true}
                path="/centers"
              />
              <UserRoute
                component={[Function]}
                exact={true}
                path="/events"
                redirectPath="/login"
              />
              <UserRoute
                component={[Function]}
                exact={true}
                path="/pending-events"
                redirectPath="/login"
              />
              <Route
                component={[Function]}
              />
            </Switch>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {},
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <Route
                  component={[Function]}
                  exact={true}
                  path="/"
                />,
                <Route
                  component={[Function]}
                  exact={true}
                  path="/register"
                />,
                <Route
                  component={[Function]}
                  exact={true}
                  path="/login"
                />,
                <Route
                  component={[Function]}
                  exact={true}
                  path="/forgot-password"
                />,
                <Route
                  component={[Function]}
                  exact={true}
                  path="/reset-password"
                />,
                <Route
                  component={[Function]}
                  exact={true}
                  path="/verify"
                />,
                <Route
                  component={[Function]}
                  exact={true}
                  path="/verified"
                />,
                <Route
                  component={[Function]}
                  exact={true}
                  path="/centers/:centerId"
                />,
                <Route
                  component={[Function]}
                  exact={true}
                  path="/centers"
                />,
                <UserRoute
                  component={[Function]}
                  exact={true}
                  path="/events"
                  redirectPath="/login"
                />,
                <UserRoute
                  component={[Function]}
                  exact={true}
                  path="/pending-events"
                  redirectPath="/login"
                />,
                <Route
                  component={[Function]}
                />,
              ],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/register",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/login",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/forgot-password",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/reset-password",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/verify",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/verified",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/centers/:centerId",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/centers",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/events",
                  "redirectPath": "/login",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "component": [Function],
                  "exact": true,
                  "path": "/pending-events",
                  "redirectPath": "/login",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "component": [Function],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
