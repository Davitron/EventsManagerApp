// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Connected Component Connected Logincomponent component successfully rendered 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(ForgotPassword)
    store={
      Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "requestReset": [Function],
      "response": Object {},
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
      "storeSubscription": Subscription {
        "listeners": Object {
          "clear": [Function],
          "get": [Function],
          "notify": [Function],
          "subscribe": [Function],
        },
        "onStateChange": [Function],
        "parentSub": undefined,
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "unsubscribe": [Function],
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "requestReset": [Function],
        "response": Object {},
        "store": Object {
          "clearActions": [Function],
          "dispatch": [Function],
          "getActions": [Function],
          "getState": [Function],
          "replaceReducer": [Function],
          "subscribe": [Function],
        },
        "storeSubscription": Subscription {
          "listeners": Object {
            "clear": [Function],
            "get": [Function],
            "notify": [Function],
            "subscribe": [Function],
          },
          "onStateChange": [Function],
          "parentSub": undefined,
          "store": Object {
            "clearActions": [Function],
            "dispatch": [Function],
            "getActions": [Function],
            "getState": [Function],
            "replaceReducer": [Function],
            "subscribe": [Function],
          },
          "unsubscribe": [Function],
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;

exports[`Register Component component successfully rendered 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ForgotPassword
    requestReset={[Function]}
    response={
      Object {
        "data": null,
        "isAuthenticated": false,
        "status": null,
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="home"
      >
        <main
          className="section__hero"
          id="index-banner"
        >
          <div
            className="my-container"
          >
            <div
              className="form-container"
            >
              <form
                name="singInForm"
                onSubmit={[Function]}
              >
                <h3>
                  Forgot Password
                </h3>
                <div
                  className="App-signup animated bounceInRight"
                  style={
                    Object {
                      "padding": "12px",
                      "paddingBottom": "20px",
                      "paddingTop": "30px",
                    }
                  }
                >
                  <div
                    style={
                      Object {
                        "textAlign": "center",
                      }
                    }
                  >
                    <span
                      style={
                        Object {
                          "color": "red",
                        }
                      }
                    >
                      
                    </span>
                  </div>
                  <span
                    style={
                      Object {
                        "color": "red",
                        "paddingBottom": "4px",
                      }
                    }
                  />
                  <Input
                    fluid={true}
                    icon="at"
                    name="email"
                    onChange={[Function]}
                    placeholder="email"
                    type="text"
                  />
                  <br />
                  <Button
                    as="button"
                    color="facebook"
                    disabled={false}
                    fluid={true}
                    loading={false}
                  >
                    Send Reset Link
                  </Button>
                  <br />
                  <span>
                    Back to
                    <Link
                      replace={false}
                      style={
                        Object {
                          "color": "white !important",
                        }
                      }
                      to="/"
                    >
                       home
                    </Link>
                  </span>
                </div>
              </form>
            </div>
          </div>
          <div
            className="section"
          />
          <div
            className="section"
          />
          <Modal
            closeOnDimmerClick={true}
            closeOnDocumentClick={false}
            dimmer={true}
            eventPool="Modal"
            onClose={undefined}
            open={false}
            size="tiny"
          >
            <ModalHeader>
              Password Reset Link
            </ModalHeader>
            <ModalContent>
              <p>
                
              </p>
            </ModalContent>
            <ModalActions>
              <Button
                as="button"
                color="facebook"
                content="OK"
                icon="checkmark"
                labelPosition="right"
                onClick={[Function]}
              />
            </ModalActions>
          </Modal>
        </main>
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <main
          className="section__hero"
          id="index-banner"
        >
          <div
            className="my-container"
          >
            <div
              className="form-container"
            >
              <form
                name="singInForm"
                onSubmit={[Function]}
              >
                <h3>
                  Forgot Password
                </h3>
                <div
                  className="App-signup animated bounceInRight"
                  style={
                    Object {
                      "padding": "12px",
                      "paddingBottom": "20px",
                      "paddingTop": "30px",
                    }
                  }
                >
                  <div
                    style={
                      Object {
                        "textAlign": "center",
                      }
                    }
                  >
                    <span
                      style={
                        Object {
                          "color": "red",
                        }
                      }
                    >
                      
                    </span>
                  </div>
                  <span
                    style={
                      Object {
                        "color": "red",
                        "paddingBottom": "4px",
                      }
                    }
                  />
                  <Input
                    fluid={true}
                    icon="at"
                    name="email"
                    onChange={[Function]}
                    placeholder="email"
                    type="text"
                  />
                  <br />
                  <Button
                    as="button"
                    color="facebook"
                    disabled={false}
                    fluid={true}
                    loading={false}
                  >
                    Send Reset Link
                  </Button>
                  <br />
                  <span>
                    Back to
                    <Link
                      replace={false}
                      style={
                        Object {
                          "color": "white !important",
                        }
                      }
                      to="/"
                    >
                       home
                    </Link>
                  </span>
                </div>
              </form>
            </div>
          </div>
          <div
            className="section"
          />
          <div
            className="section"
          />
          <Modal
            closeOnDimmerClick={true}
            closeOnDocumentClick={false}
            dimmer={true}
            eventPool="Modal"
            onClose={undefined}
            open={false}
            size="tiny"
          >
            <ModalHeader>
              Password Reset Link
            </ModalHeader>
            <ModalContent>
              <p>
                
              </p>
            </ModalContent>
            <ModalActions>
              <Button
                as="button"
                color="facebook"
                content="OK"
                icon="checkmark"
                labelPosition="right"
                onClick={[Function]}
              />
            </ModalActions>
          </Modal>
        </main>,
        "className": "home",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="my-container"
            >
              <div
                className="form-container"
              >
                <form
                  name="singInForm"
                  onSubmit={[Function]}
                >
                  <h3>
                    Forgot Password
                  </h3>
                  <div
                    className="App-signup animated bounceInRight"
                    style={
                      Object {
                        "padding": "12px",
                        "paddingBottom": "20px",
                        "paddingTop": "30px",
                      }
                    }
                  >
                    <div
                      style={
                        Object {
                          "textAlign": "center",
                        }
                      }
                    >
                      <span
                        style={
                          Object {
                            "color": "red",
                          }
                        }
                      >
                        
                      </span>
                    </div>
                    <span
                      style={
                        Object {
                          "color": "red",
                          "paddingBottom": "4px",
                        }
                      }
                    />
                    <Input
                      fluid={true}
                      icon="at"
                      name="email"
                      onChange={[Function]}
                      placeholder="email"
                      type="text"
                    />
                    <br />
                    <Button
                      as="button"
                      color="facebook"
                      disabled={false}
                      fluid={true}
                      loading={false}
                    >
                      Send Reset Link
                    </Button>
                    <br />
                    <span>
                      Back to
                      <Link
                        replace={false}
                        style={
                          Object {
                            "color": "white !important",
                          }
                        }
                        to="/"
                      >
                         home
                      </Link>
                    </span>
                  </div>
                </form>
              </div>
            </div>,
            <div
              className="section"
            />,
            <div
              className="section"
            />,
            <Modal
              closeOnDimmerClick={true}
              closeOnDocumentClick={false}
              dimmer={true}
              eventPool="Modal"
              onClose={undefined}
              open={false}
              size="tiny"
            >
              <ModalHeader>
                Password Reset Link
              </ModalHeader>
              <ModalContent>
                <p>
                  
                </p>
              </ModalContent>
              <ModalActions>
                <Button
                  as="button"
                  color="facebook"
                  content="OK"
                  icon="checkmark"
                  labelPosition="right"
                  onClick={[Function]}
                />
              </ModalActions>
            </Modal>,
          ],
          "className": "section__hero",
          "id": "index-banner",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <div
                className="form-container"
              >
                <form
                  name="singInForm"
                  onSubmit={[Function]}
                >
                  <h3>
                    Forgot Password
                  </h3>
                  <div
                    className="App-signup animated bounceInRight"
                    style={
                      Object {
                        "padding": "12px",
                        "paddingBottom": "20px",
                        "paddingTop": "30px",
                      }
                    }
                  >
                    <div
                      style={
                        Object {
                          "textAlign": "center",
                        }
                      }
                    >
                      <span
                        style={
                          Object {
                            "color": "red",
                          }
                        }
                      >
                        
                      </span>
                    </div>
                    <span
                      style={
                        Object {
                          "color": "red",
                          "paddingBottom": "4px",
                        }
                      }
                    />
                    <Input
                      fluid={true}
                      icon="at"
                      name="email"
                      onChange={[Function]}
                      placeholder="email"
                      type="text"
                    />
                    <br />
                    <Button
                      as="button"
                      color="facebook"
                      disabled={false}
                      fluid={true}
                      loading={false}
                    >
                      Send Reset Link
                    </Button>
                    <br />
                    <span>
                      Back to
                      <Link
                        replace={false}
                        style={
                          Object {
                            "color": "white !important",
                          }
                        }
                        to="/"
                      >
                         home
                      </Link>
                    </span>
                  </div>
                </form>
              </div>,
              "className": "my-container",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <form
                  name="singInForm"
                  onSubmit={[Function]}
                >
                  <h3>
                    Forgot Password
                  </h3>
                  <div
                    className="App-signup animated bounceInRight"
                    style={
                      Object {
                        "padding": "12px",
                        "paddingBottom": "20px",
                        "paddingTop": "30px",
                      }
                    }
                  >
                    <div
                      style={
                        Object {
                          "textAlign": "center",
                        }
                      }
                    >
                      <span
                        style={
                          Object {
                            "color": "red",
                          }
                        }
                      >
                        
                      </span>
                    </div>
                    <span
                      style={
                        Object {
                          "color": "red",
                          "paddingBottom": "4px",
                        }
                      }
                    />
                    <Input
                      fluid={true}
                      icon="at"
                      name="email"
                      onChange={[Function]}
                      placeholder="email"
                      type="text"
                    />
                    <br />
                    <Button
                      as="button"
                      color="facebook"
                      disabled={false}
                      fluid={true}
                      loading={false}
                    >
                      Send Reset Link
                    </Button>
                    <br />
                    <span>
                      Back to
                      <Link
                        replace={false}
                        style={
                          Object {
                            "color": "white !important",
                          }
                        }
                        to="/"
                      >
                         home
                      </Link>
                    </span>
                  </div>
                </form>,
                "className": "form-container",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <h3>
                      Forgot Password
                    </h3>,
                    <div
                      className="App-signup animated bounceInRight"
                      style={
                        Object {
                          "padding": "12px",
                          "paddingBottom": "20px",
                          "paddingTop": "30px",
                        }
                      }
                    >
                      <div
                        style={
                          Object {
                            "textAlign": "center",
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "color": "red",
                            }
                          }
                        >
                          
                        </span>
                      </div>
                      <span
                        style={
                          Object {
                            "color": "red",
                            "paddingBottom": "4px",
                          }
                        }
                      />
                      <Input
                        fluid={true}
                        icon="at"
                        name="email"
                        onChange={[Function]}
                        placeholder="email"
                        type="text"
                      />
                      <br />
                      <Button
                        as="button"
                        color="facebook"
                        disabled={false}
                        fluid={true}
                        loading={false}
                      >
                        Send Reset Link
                      </Button>
                      <br />
                      <span>
                        Back to
                        <Link
                          replace={false}
                          style={
                            Object {
                              "color": "white !important",
                            }
                          }
                          to="/"
                        >
                           home
                        </Link>
                      </span>
                    </div>,
                  ],
                  "name": "singInForm",
                  "onSubmit": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "Forgot Password",
                    },
                    "ref": null,
                    "rendered": "Forgot Password",
                    "type": "h3",
                  },
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <div
                          style={
                            Object {
                              "textAlign": "center",
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "color": "red",
                              }
                            }
                          >
                            
                          </span>
                        </div>,
                        <span
                          style={
                            Object {
                              "color": "red",
                              "paddingBottom": "4px",
                            }
                          }
                        />,
                        <Input
                          fluid={true}
                          icon="at"
                          name="email"
                          onChange={[Function]}
                          placeholder="email"
                          type="text"
                        />,
                        <br />,
                        <Button
                          as="button"
                          color="facebook"
                          disabled={false}
                          fluid={true}
                          loading={false}
                        >
                          Send Reset Link
                        </Button>,
                        <br />,
                        <span>
                          Back to
                          <Link
                            replace={false}
                            style={
                              Object {
                                "color": "white !important",
                              }
                            }
                            to="/"
                          >
                             home
                          </Link>
                        </span>,
                      ],
                      "className": "App-signup animated bounceInRight",
                      "style": Object {
                        "padding": "12px",
                        "paddingBottom": "20px",
                        "paddingTop": "30px",
                      },
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": <span
                            style={
                              Object {
                                "color": "red",
                              }
                            }
                          >
                            
                          </span>,
                          "style": Object {
                            "textAlign": "center",
                          },
                        },
                        "ref": null,
                        "rendered": Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": "",
                            "style": Object {
                              "color": "red",
                            },
                          },
                          "ref": null,
                          "rendered": "",
                          "type": "span",
                        },
                        "type": "div",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": undefined,
                          "style": Object {
                            "color": "red",
                            "paddingBottom": "4px",
                          },
                        },
                        "ref": null,
                        "rendered": null,
                        "type": "span",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "fluid": true,
                          "icon": "at",
                          "name": "email",
                          "onChange": [Function],
                          "placeholder": "email",
                          "type": "text",
                        },
                        "ref": null,
                        "rendered": null,
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": "br",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "class",
                        "props": Object {
                          "as": "button",
                          "children": "Send Reset Link",
                          "color": "facebook",
                          "disabled": false,
                          "fluid": true,
                          "loading": false,
                        },
                        "ref": null,
                        "rendered": "Send Reset Link",
                        "type": [Function],
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": null,
                        "type": "br",
                      },
                      Object {
                        "instance": null,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            "Back to",
                            <Link
                              replace={false}
                              style={
                                Object {
                                  "color": "white !important",
                                }
                              }
                              to="/"
                            >
                               home
                            </Link>,
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          "Back to",
                          Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "class",
                            "props": Object {
                              "children": " home",
                              "replace": false,
                              "style": Object {
                                "color": "white !important",
                              },
                              "to": "/",
                            },
                            "ref": null,
                            "rendered": " home",
                            "type": [Function],
                          },
                        ],
                        "type": "span",
                      },
                    ],
                    "type": "div",
                  },
                ],
                "type": "form",
              },
              "type": "div",
            },
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "section",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "section",
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": Array [
                <ModalHeader>
                  Password Reset Link
                </ModalHeader>,
                <ModalContent>
                  <p>
                    
                  </p>
                </ModalContent>,
                <ModalActions>
                  <Button
                    as="button"
                    color="facebook"
                    content="OK"
                    icon="checkmark"
                    labelPosition="right"
                    onClick={[Function]}
                  />
                </ModalActions>,
              ],
              "closeOnDimmerClick": true,
              "closeOnDocumentClick": false,
              "dimmer": true,
              "eventPool": "Modal",
              "onClose": undefined,
              "open": false,
              "size": "tiny",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Password Reset Link",
                },
                "ref": null,
                "rendered": "Password Reset Link",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <p>
                    
                  </p>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "",
                  },
                  "ref": null,
                  "rendered": "",
                  "type": "p",
                },
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": <Button
                    as="button"
                    color="facebook"
                    content="OK"
                    icon="checkmark"
                    labelPosition="right"
                    onClick={[Function]}
                  />,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "as": "button",
                    "color": "facebook",
                    "content": "OK",
                    "icon": "checkmark",
                    "labelPosition": "right",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
                "type": [Function],
              },
            ],
            "type": [Function],
          },
        ],
        "type": "main",
      },
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="home"
        >
          <main
            className="section__hero"
            id="index-banner"
          >
            <div
              className="my-container"
            >
              <div
                className="form-container"
              >
                <form
                  name="singInForm"
                  onSubmit={[Function]}
                >
                  <h3>
                    Forgot Password
                  </h3>
                  <div
                    className="App-signup animated bounceInRight"
                    style={
                      Object {
                        "padding": "12px",
                        "paddingBottom": "20px",
                        "paddingTop": "30px",
                      }
                    }
                  >
                    <div
                      style={
                        Object {
                          "textAlign": "center",
                        }
                      }
                    >
                      <span
                        style={
                          Object {
                            "color": "red",
                          }
                        }
                      >
                        
                      </span>
                    </div>
                    <span
                      style={
                        Object {
                          "color": "red",
                          "paddingBottom": "4px",
                        }
                      }
                    />
                    <Input
                      fluid={true}
                      icon="at"
                      name="email"
                      onChange={[Function]}
                      placeholder="email"
                      type="text"
                    />
                    <br />
                    <Button
                      as="button"
                      color="facebook"
                      disabled={false}
                      fluid={true}
                      loading={false}
                    >
                      Send Reset Link
                    </Button>
                    <br />
                    <span>
                      Back to
                      <Link
                        replace={false}
                        style={
                          Object {
                            "color": "white !important",
                          }
                        }
                        to="/"
                      >
                         home
                      </Link>
                    </span>
                  </div>
                </form>
              </div>
            </div>
            <div
              className="section"
            />
            <div
              className="section"
            />
            <Modal
              closeOnDimmerClick={true}
              closeOnDocumentClick={false}
              dimmer={true}
              eventPool="Modal"
              onClose={undefined}
              open={false}
              size="tiny"
            >
              <ModalHeader>
                Password Reset Link
              </ModalHeader>
              <ModalContent>
                <p>
                  
                </p>
              </ModalContent>
              <ModalActions>
                <Button
                  as="button"
                  color="facebook"
                  content="OK"
                  icon="checkmark"
                  labelPosition="right"
                  onClick={[Function]}
                />
              </ModalActions>
            </Modal>
          </main>
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <main
            className="section__hero"
            id="index-banner"
          >
            <div
              className="my-container"
            >
              <div
                className="form-container"
              >
                <form
                  name="singInForm"
                  onSubmit={[Function]}
                >
                  <h3>
                    Forgot Password
                  </h3>
                  <div
                    className="App-signup animated bounceInRight"
                    style={
                      Object {
                        "padding": "12px",
                        "paddingBottom": "20px",
                        "paddingTop": "30px",
                      }
                    }
                  >
                    <div
                      style={
                        Object {
                          "textAlign": "center",
                        }
                      }
                    >
                      <span
                        style={
                          Object {
                            "color": "red",
                          }
                        }
                      >
                        
                      </span>
                    </div>
                    <span
                      style={
                        Object {
                          "color": "red",
                          "paddingBottom": "4px",
                        }
                      }
                    />
                    <Input
                      fluid={true}
                      icon="at"
                      name="email"
                      onChange={[Function]}
                      placeholder="email"
                      type="text"
                    />
                    <br />
                    <Button
                      as="button"
                      color="facebook"
                      disabled={false}
                      fluid={true}
                      loading={false}
                    >
                      Send Reset Link
                    </Button>
                    <br />
                    <span>
                      Back to
                      <Link
                        replace={false}
                        style={
                          Object {
                            "color": "white !important",
                          }
                        }
                        to="/"
                      >
                         home
                      </Link>
                    </span>
                  </div>
                </form>
              </div>
            </div>
            <div
              className="section"
            />
            <div
              className="section"
            />
            <Modal
              closeOnDimmerClick={true}
              closeOnDocumentClick={false}
              dimmer={true}
              eventPool="Modal"
              onClose={undefined}
              open={false}
              size="tiny"
            >
              <ModalHeader>
                Password Reset Link
              </ModalHeader>
              <ModalContent>
                <p>
                  
                </p>
              </ModalContent>
              <ModalActions>
                <Button
                  as="button"
                  color="facebook"
                  content="OK"
                  icon="checkmark"
                  labelPosition="right"
                  onClick={[Function]}
                />
              </ModalActions>
            </Modal>
          </main>,
          "className": "home",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="my-container"
              >
                <div
                  className="form-container"
                >
                  <form
                    name="singInForm"
                    onSubmit={[Function]}
                  >
                    <h3>
                      Forgot Password
                    </h3>
                    <div
                      className="App-signup animated bounceInRight"
                      style={
                        Object {
                          "padding": "12px",
                          "paddingBottom": "20px",
                          "paddingTop": "30px",
                        }
                      }
                    >
                      <div
                        style={
                          Object {
                            "textAlign": "center",
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "color": "red",
                            }
                          }
                        >
                          
                        </span>
                      </div>
                      <span
                        style={
                          Object {
                            "color": "red",
                            "paddingBottom": "4px",
                          }
                        }
                      />
                      <Input
                        fluid={true}
                        icon="at"
                        name="email"
                        onChange={[Function]}
                        placeholder="email"
                        type="text"
                      />
                      <br />
                      <Button
                        as="button"
                        color="facebook"
                        disabled={false}
                        fluid={true}
                        loading={false}
                      >
                        Send Reset Link
                      </Button>
                      <br />
                      <span>
                        Back to
                        <Link
                          replace={false}
                          style={
                            Object {
                              "color": "white !important",
                            }
                          }
                          to="/"
                        >
                           home
                        </Link>
                      </span>
                    </div>
                  </form>
                </div>
              </div>,
              <div
                className="section"
              />,
              <div
                className="section"
              />,
              <Modal
                closeOnDimmerClick={true}
                closeOnDocumentClick={false}
                dimmer={true}
                eventPool="Modal"
                onClose={undefined}
                open={false}
                size="tiny"
              >
                <ModalHeader>
                  Password Reset Link
                </ModalHeader>
                <ModalContent>
                  <p>
                    
                  </p>
                </ModalContent>
                <ModalActions>
                  <Button
                    as="button"
                    color="facebook"
                    content="OK"
                    icon="checkmark"
                    labelPosition="right"
                    onClick={[Function]}
                  />
                </ModalActions>
              </Modal>,
            ],
            "className": "section__hero",
            "id": "index-banner",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <div
                  className="form-container"
                >
                  <form
                    name="singInForm"
                    onSubmit={[Function]}
                  >
                    <h3>
                      Forgot Password
                    </h3>
                    <div
                      className="App-signup animated bounceInRight"
                      style={
                        Object {
                          "padding": "12px",
                          "paddingBottom": "20px",
                          "paddingTop": "30px",
                        }
                      }
                    >
                      <div
                        style={
                          Object {
                            "textAlign": "center",
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "color": "red",
                            }
                          }
                        >
                          
                        </span>
                      </div>
                      <span
                        style={
                          Object {
                            "color": "red",
                            "paddingBottom": "4px",
                          }
                        }
                      />
                      <Input
                        fluid={true}
                        icon="at"
                        name="email"
                        onChange={[Function]}
                        placeholder="email"
                        type="text"
                      />
                      <br />
                      <Button
                        as="button"
                        color="facebook"
                        disabled={false}
                        fluid={true}
                        loading={false}
                      >
                        Send Reset Link
                      </Button>
                      <br />
                      <span>
                        Back to
                        <Link
                          replace={false}
                          style={
                            Object {
                              "color": "white !important",
                            }
                          }
                          to="/"
                        >
                           home
                        </Link>
                      </span>
                    </div>
                  </form>
                </div>,
                "className": "my-container",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <form
                    name="singInForm"
                    onSubmit={[Function]}
                  >
                    <h3>
                      Forgot Password
                    </h3>
                    <div
                      className="App-signup animated bounceInRight"
                      style={
                        Object {
                          "padding": "12px",
                          "paddingBottom": "20px",
                          "paddingTop": "30px",
                        }
                      }
                    >
                      <div
                        style={
                          Object {
                            "textAlign": "center",
                          }
                        }
                      >
                        <span
                          style={
                            Object {
                              "color": "red",
                            }
                          }
                        >
                          
                        </span>
                      </div>
                      <span
                        style={
                          Object {
                            "color": "red",
                            "paddingBottom": "4px",
                          }
                        }
                      />
                      <Input
                        fluid={true}
                        icon="at"
                        name="email"
                        onChange={[Function]}
                        placeholder="email"
                        type="text"
                      />
                      <br />
                      <Button
                        as="button"
                        color="facebook"
                        disabled={false}
                        fluid={true}
                        loading={false}
                      >
                        Send Reset Link
                      </Button>
                      <br />
                      <span>
                        Back to
                        <Link
                          replace={false}
                          style={
                            Object {
                              "color": "white !important",
                            }
                          }
                          to="/"
                        >
                           home
                        </Link>
                      </span>
                    </div>
                  </form>,
                  "className": "form-container",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h3>
                        Forgot Password
                      </h3>,
                      <div
                        className="App-signup animated bounceInRight"
                        style={
                          Object {
                            "padding": "12px",
                            "paddingBottom": "20px",
                            "paddingTop": "30px",
                          }
                        }
                      >
                        <div
                          style={
                            Object {
                              "textAlign": "center",
                            }
                          }
                        >
                          <span
                            style={
                              Object {
                                "color": "red",
                              }
                            }
                          >
                            
                          </span>
                        </div>
                        <span
                          style={
                            Object {
                              "color": "red",
                              "paddingBottom": "4px",
                            }
                          }
                        />
                        <Input
                          fluid={true}
                          icon="at"
                          name="email"
                          onChange={[Function]}
                          placeholder="email"
                          type="text"
                        />
                        <br />
                        <Button
                          as="button"
                          color="facebook"
                          disabled={false}
                          fluid={true}
                          loading={false}
                        >
                          Send Reset Link
                        </Button>
                        <br />
                        <span>
                          Back to
                          <Link
                            replace={false}
                            style={
                              Object {
                                "color": "white !important",
                              }
                            }
                            to="/"
                          >
                             home
                          </Link>
                        </span>
                      </div>,
                    ],
                    "name": "singInForm",
                    "onSubmit": [Function],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": "Forgot Password",
                      },
                      "ref": null,
                      "rendered": "Forgot Password",
                      "type": "h3",
                    },
                    Object {
                      "instance": null,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          <div
                            style={
                              Object {
                                "textAlign": "center",
                              }
                            }
                          >
                            <span
                              style={
                                Object {
                                  "color": "red",
                                }
                              }
                            >
                              
                            </span>
                          </div>,
                          <span
                            style={
                              Object {
                                "color": "red",
                                "paddingBottom": "4px",
                              }
                            }
                          />,
                          <Input
                            fluid={true}
                            icon="at"
                            name="email"
                            onChange={[Function]}
                            placeholder="email"
                            type="text"
                          />,
                          <br />,
                          <Button
                            as="button"
                            color="facebook"
                            disabled={false}
                            fluid={true}
                            loading={false}
                          >
                            Send Reset Link
                          </Button>,
                          <br />,
                          <span>
                            Back to
                            <Link
                              replace={false}
                              style={
                                Object {
                                  "color": "white !important",
                                }
                              }
                              to="/"
                            >
                               home
                            </Link>
                          </span>,
                        ],
                        "className": "App-signup animated bounceInRight",
                        "style": Object {
                          "padding": "12px",
                          "paddingBottom": "20px",
                          "paddingTop": "30px",
                        },
                      },
                      "ref": null,
                      "rendered": Array [
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": <span
                              style={
                                Object {
                                  "color": "red",
                                }
                              }
                            >
                              
                            </span>,
                            "style": Object {
                              "textAlign": "center",
                            },
                          },
                          "ref": null,
                          "rendered": Object {
                            "instance": null,
                            "key": undefined,
                            "nodeType": "host",
                            "props": Object {
                              "children": "",
                              "style": Object {
                                "color": "red",
                              },
                            },
                            "ref": null,
                            "rendered": "",
                            "type": "span",
                          },
                          "type": "div",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": undefined,
                            "style": Object {
                              "color": "red",
                              "paddingBottom": "4px",
                            },
                          },
                          "ref": null,
                          "rendered": null,
                          "type": "span",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "fluid": true,
                            "icon": "at",
                            "name": "email",
                            "onChange": [Function],
                            "placeholder": "email",
                            "type": "text",
                          },
                          "ref": null,
                          "rendered": null,
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {},
                          "ref": null,
                          "rendered": null,
                          "type": "br",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "class",
                          "props": Object {
                            "as": "button",
                            "children": "Send Reset Link",
                            "color": "facebook",
                            "disabled": false,
                            "fluid": true,
                            "loading": false,
                          },
                          "ref": null,
                          "rendered": "Send Reset Link",
                          "type": [Function],
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {},
                          "ref": null,
                          "rendered": null,
                          "type": "br",
                        },
                        Object {
                          "instance": null,
                          "key": undefined,
                          "nodeType": "host",
                          "props": Object {
                            "children": Array [
                              "Back to",
                              <Link
                                replace={false}
                                style={
                                  Object {
                                    "color": "white !important",
                                  }
                                }
                                to="/"
                              >
                                 home
                              </Link>,
                            ],
                          },
                          "ref": null,
                          "rendered": Array [
                            "Back to",
                            Object {
                              "instance": null,
                              "key": undefined,
                              "nodeType": "class",
                              "props": Object {
                                "children": " home",
                                "replace": false,
                                "style": Object {
                                  "color": "white !important",
                                },
                                "to": "/",
                              },
                              "ref": null,
                              "rendered": " home",
                              "type": [Function],
                            },
                          ],
                          "type": "span",
                        },
                      ],
                      "type": "div",
                    },
                  ],
                  "type": "form",
                },
                "type": "div",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "section",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "section",
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": Array [
                  <ModalHeader>
                    Password Reset Link
                  </ModalHeader>,
                  <ModalContent>
                    <p>
                      
                    </p>
                  </ModalContent>,
                  <ModalActions>
                    <Button
                      as="button"
                      color="facebook"
                      content="OK"
                      icon="checkmark"
                      labelPosition="right"
                      onClick={[Function]}
                    />
                  </ModalActions>,
                ],
                "closeOnDimmerClick": true,
                "closeOnDocumentClick": false,
                "dimmer": true,
                "eventPool": "Modal",
                "onClose": undefined,
                "open": false,
                "size": "tiny",
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Password Reset Link",
                  },
                  "ref": null,
                  "rendered": "Password Reset Link",
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": <p>
                      
                    </p>,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "",
                    },
                    "ref": null,
                    "rendered": "",
                    "type": "p",
                  },
                  "type": [Function],
                },
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": <Button
                      as="button"
                      color="facebook"
                      content="OK"
                      icon="checkmark"
                      labelPosition="right"
                      onClick={[Function]}
                    />,
                  },
                  "ref": null,
                  "rendered": Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {
                      "as": "button",
                      "color": "facebook",
                      "content": "OK",
                      "icon": "checkmark",
                      "labelPosition": "right",
                      "onClick": [Function],
                    },
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                  "type": [Function],
                },
              ],
              "type": [Function],
            },
          ],
          "type": "main",
        },
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
