// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Event Component component successfully rendered 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <EventCard
    dispatch={[Function]}
    event={
      Object {
        "Center": Object {
          "name": "test center",
        },
        "centerId": 2,
        "days": "2",
        "eventName": "Test Arena",
        "image": Object {
          "files": Array [],
        },
        "startDate": "2018-12-12",
        "status": "pending",
      }
    }
    history={
      Object {
        "push": [MockFunction],
      }
    }
    location={Object {}}
    mode="Accept"
    onNegative={[Function]}
    onPositive={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <Image
          as="img"
          src={
            Object {
              "files": Array [],
            }
          }
          ui={true}
        />,
        <CardContent>
          <Label
            color="orange"
            ribbon="right"
          >
            pending
          </Label>
          <CardHeader>
            Test Arena
          </CardHeader>
          <CardMeta>
            December 12th 2018 - June 11th 2018
          </CardMeta>
          <CardDescription>
            <Link
              replace={false}
              to="/centers/2"
            />
          </CardDescription>
        </CardContent>,
        <CardContent
          extra={true}
        >
          <div
            className="ui two buttons"
          >
            <Button
              as="button"
              basic={true}
              color="green"
              onClick={[MockFunction]}
            >
              Accept
            </Button>
            <Button
              as="button"
              basic={true}
              color="red"
              onClick={[Function]}
            >
              Decline
            </Button>
          </div>
        </CardContent>,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "as": "img",
          "src": Object {
            "files": Array [],
          },
          "ui": true,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": Array [
            <Label
              color="orange"
              ribbon="right"
            >
              pending
            </Label>,
            <CardHeader>
              Test Arena
            </CardHeader>,
            <CardMeta>
              December 12th 2018 - June 11th 2018
            </CardMeta>,
            <CardDescription>
              <Link
                replace={false}
                to="/centers/2"
              />
            </CardDescription>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "pending",
              "color": "orange",
              "ribbon": "right",
            },
            "ref": null,
            "rendered": "pending",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "Test Arena",
            },
            "ref": null,
            "rendered": "Test Arena",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": "December 12th 2018 - June 11th 2018",
            },
            "ref": null,
            "rendered": "December 12th 2018 - June 11th 2018",
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": <Link
                replace={false}
                to="/centers/2"
              />,
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": undefined,
                "replace": false,
                "to": "/centers/2",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "function",
        "props": Object {
          "children": <div
            className="ui two buttons"
          >
            <Button
              as="button"
              basic={true}
              color="green"
              onClick={[MockFunction]}
            >
              Accept
            </Button>
            <Button
              as="button"
              basic={true}
              color="red"
              onClick={[Function]}
            >
              Decline
            </Button>
          </div>,
          "extra": true,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Button
                as="button"
                basic={true}
                color="green"
                onClick={[MockFunction]}
              >
                Accept
              </Button>,
              <Button
                as="button"
                basic={true}
                color="red"
                onClick={[Function]}
              >
                Decline
              </Button>,
            ],
            "className": "ui two buttons",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "button",
                "basic": true,
                "children": "Accept",
                "color": "green",
                "onClick": [MockFunction],
              },
              "ref": null,
              "rendered": "Accept",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "as": "button",
                "basic": true,
                "children": "Decline",
                "color": "red",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": "Decline",
              "type": [Function],
            },
          ],
          "type": "div",
        },
        "type": [Function],
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Image
            as="img"
            src={
              Object {
                "files": Array [],
              }
            }
            ui={true}
          />,
          <CardContent>
            <Label
              color="orange"
              ribbon="right"
            >
              pending
            </Label>
            <CardHeader>
              Test Arena
            </CardHeader>
            <CardMeta>
              December 12th 2018 - June 11th 2018
            </CardMeta>
            <CardDescription>
              <Link
                replace={false}
                to="/centers/2"
              />
            </CardDescription>
          </CardContent>,
          <CardContent
            extra={true}
          >
            <div
              className="ui two buttons"
            >
              <Button
                as="button"
                basic={true}
                color="green"
                onClick={[MockFunction]}
              >
                Accept
              </Button>
              <Button
                as="button"
                basic={true}
                color="red"
                onClick={[Function]}
              >
                Decline
              </Button>
            </div>
          </CardContent>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "as": "img",
            "src": Object {
              "files": Array [],
            },
            "ui": true,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <Label
                color="orange"
                ribbon="right"
              >
                pending
              </Label>,
              <CardHeader>
                Test Arena
              </CardHeader>,
              <CardMeta>
                December 12th 2018 - June 11th 2018
              </CardMeta>,
              <CardDescription>
                <Link
                  replace={false}
                  to="/centers/2"
                />
              </CardDescription>,
            ],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "pending",
                "color": "orange",
                "ribbon": "right",
              },
              "ref": null,
              "rendered": "pending",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "Test Arena",
              },
              "ref": null,
              "rendered": "Test Arena",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": "December 12th 2018 - June 11th 2018",
              },
              "ref": null,
              "rendered": "December 12th 2018 - June 11th 2018",
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <Link
                  replace={false}
                  to="/centers/2"
                />,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": undefined,
                  "replace": false,
                  "to": "/centers/2",
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              "type": [Function],
            },
          ],
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": <div
              className="ui two buttons"
            >
              <Button
                as="button"
                basic={true}
                color="green"
                onClick={[MockFunction]}
              >
                Accept
              </Button>
              <Button
                as="button"
                basic={true}
                color="red"
                onClick={[Function]}
              >
                Decline
              </Button>
            </div>,
            "extra": true,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <Button
                  as="button"
                  basic={true}
                  color="green"
                  onClick={[MockFunction]}
                >
                  Accept
                </Button>,
                <Button
                  as="button"
                  basic={true}
                  color="red"
                  onClick={[Function]}
                >
                  Decline
                </Button>,
              ],
              "className": "ui two buttons",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "button",
                  "basic": true,
                  "children": "Accept",
                  "color": "green",
                  "onClick": [MockFunction],
                },
                "ref": null,
                "rendered": "Accept",
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "as": "button",
                  "basic": true,
                  "children": "Decline",
                  "color": "red",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": "Decline",
                "type": [Function],
              },
            ],
            "type": "div",
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
