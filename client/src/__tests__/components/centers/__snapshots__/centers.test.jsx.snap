// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Center Component component successfully rendered 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Center
    createCenter={[MockFunction]}
    dispatch={[Function]}
    getAll={[Function]}
    getStates={[Function]}
    history={
      Object {
        "push": [MockFunction],
      }
    }
    location={Object {}}
    response={
      Object {
        "allStates": Object {},
        "centers": Object {},
        "newCenter": Object {},
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="background"
      >
        <div
          className="my-container"
        >
          <div
            style={
              Object {
                "textAlign": "center",
              }
            }
          >
            <span
              style={
                Object {
                  "fontSize": "45px",
                }
              }
            >
              Centers
            </span>
          </div>
          <SearchForm
            onSearch={[Function]}
            states={Array []}
          />
          <Grid>
            <GridRow
              colunms={3}
            >
              
            </GridRow>
          </Grid>
        </div>
        <Connect(CenterFormModal)
          errors={Object {}}
          hideModal={[Function]}
          isRequestMade={false}
          onSubmit={[Function]}
          open={false}
          states={Array []}
        />
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="my-container"
          >
            <div
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              <span
                style={
                  Object {
                    "fontSize": "45px",
                  }
                }
              >
                Centers
              </span>
            </div>
            <SearchForm
              onSearch={[Function]}
              states={Array []}
            />
            <Grid>
              <GridRow
                colunms={3}
              >
                
              </GridRow>
            </Grid>
          </div>,
          <Connect(CenterFormModal)
            errors={Object {}}
            hideModal={[Function]}
            isRequestMade={false}
            onSubmit={[Function]}
            open={false}
            states={Array []}
          />,
          false,
        ],
        "className": "background",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                <span
                  style={
                    Object {
                      "fontSize": "45px",
                    }
                  }
                >
                  Centers
                </span>
              </div>,
              <SearchForm
                onSearch={[Function]}
                states={Array []}
              />,
              <Grid>
                <GridRow
                  colunms={3}
                >
                  
                </GridRow>
              </Grid>,
              false,
            ],
            "className": "my-container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <span
                  style={
                    Object {
                      "fontSize": "45px",
                    }
                  }
                >
                  Centers
                </span>,
                "style": Object {
                  "textAlign": "center",
                },
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Centers",
                  "style": Object {
                    "fontSize": "45px",
                  },
                },
                "ref": null,
                "rendered": "Centers",
                "type": "span",
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "onSearch": [Function],
                "states": Array [],
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": <GridRow
                  colunms={3}
                >
                  
                </GridRow>,
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    false,
                    "",
                    Array [],
                  ],
                  "colunms": 3,
                },
                "ref": null,
                "rendered": Array [
                  false,
                  "",
                ],
                "type": [Function],
              },
              "type": [Function],
            },
            false,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "errors": Object {},
            "hideModal": [Function],
            "isRequestMade": false,
            "onSubmit": [Function],
            "open": false,
            "states": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        false,
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="background"
        >
          <div
            className="my-container"
          >
            <div
              style={
                Object {
                  "textAlign": "center",
                }
              }
            >
              <span
                style={
                  Object {
                    "fontSize": "45px",
                  }
                }
              >
                Centers
              </span>
            </div>
            <SearchForm
              onSearch={[Function]}
              states={Array []}
            />
            <Grid>
              <GridRow
                colunms={3}
              >
                
              </GridRow>
            </Grid>
          </div>
          <Connect(CenterFormModal)
            errors={Object {}}
            hideModal={[Function]}
            isRequestMade={false}
            onSubmit={[Function]}
            open={false}
            states={Array []}
          />
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="my-container"
            >
              <div
                style={
                  Object {
                    "textAlign": "center",
                  }
                }
              >
                <span
                  style={
                    Object {
                      "fontSize": "45px",
                    }
                  }
                >
                  Centers
                </span>
              </div>
              <SearchForm
                onSearch={[Function]}
                states={Array []}
              />
              <Grid>
                <GridRow
                  colunms={3}
                >
                  
                </GridRow>
              </Grid>
            </div>,
            <Connect(CenterFormModal)
              errors={Object {}}
              hideModal={[Function]}
              isRequestMade={false}
              onSubmit={[Function]}
              open={false}
              states={Array []}
            />,
            false,
          ],
          "className": "background",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  style={
                    Object {
                      "textAlign": "center",
                    }
                  }
                >
                  <span
                    style={
                      Object {
                        "fontSize": "45px",
                      }
                    }
                  >
                    Centers
                  </span>
                </div>,
                <SearchForm
                  onSearch={[Function]}
                  states={Array []}
                />,
                <Grid>
                  <GridRow
                    colunms={3}
                  >
                    
                  </GridRow>
                </Grid>,
                false,
              ],
              "className": "my-container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <span
                    style={
                      Object {
                        "fontSize": "45px",
                      }
                    }
                  >
                    Centers
                  </span>,
                  "style": Object {
                    "textAlign": "center",
                  },
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "Centers",
                    "style": Object {
                      "fontSize": "45px",
                    },
                  },
                  "ref": null,
                  "rendered": "Centers",
                  "type": "span",
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "onSearch": [Function],
                  "states": Array [],
                },
                "ref": null,
                "rendered": null,
                "type": [Function],
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": <GridRow
                    colunms={3}
                  >
                    
                  </GridRow>,
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": Array [
                      false,
                      "",
                      Array [],
                    ],
                    "colunms": 3,
                  },
                  "ref": null,
                  "rendered": Array [
                    false,
                    "",
                  ],
                  "type": [Function],
                },
                "type": [Function],
              },
              false,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "errors": Object {},
              "hideModal": [Function],
              "isRequestMade": false,
              "onSubmit": [Function],
              "open": false,
              "states": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          false,
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
