// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Center Component component successfully rendered 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CenterDetails
    createEvent={[MockFunction]}
    deleteCenter={[MockFunction]}
    getCenter={
      [MockFunction] {
        "calls": Array [
          Array [
            1,
          ],
        ],
      }
    }
    getStates={
      [MockFunction] {
        "calls": Array [
          Array [],
        ],
      }
    }
    history={
      Object {
        "push": [MockFunction],
      }
    }
    match={
      Object {
        "params": Object {
          "centerId": 1,
        },
      }
    }
    response={
      Object {
        "response": Object {
          "allStates": Object {
            "data": null,
            "status": null,
          },
          "deleteState": Object {
            "data": null,
            "status": null,
          },
          "newEvent": Object {
            "data": null,
            "status": null,
          },
          "singleCenter": Object {
            "data": null,
            "status": null,
          },
          "updatedCenter": Object {
            "data": null,
            "status": null,
          },
        },
      }
    }
    updateCenter={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="background"
      >
        <div
          className="my-container"
        />
        <Connect(CenterFormModal)
          center={null}
          errors={Object {}}
          hideModal={[Function]}
          isRequestMade={false}
          onSubmit={[Function]}
          open={false}
          states={Array []}
        />
        <Connect(EventFormModal)
          errors={Object {}}
          hideModal={[Function]}
          isRequestMade={false}
          onSubmit={[Function]}
          open={false}
        />
        <Confirm
          isRequestMade={false}
          message="Are you sure you want to delete this center"
          onCancel={[Function]}
          onConfirm={[Function]}
          open={false}
          title="Delete Center"
        />
      </div>,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="my-container"
          />,
          <Connect(CenterFormModal)
            center={null}
            errors={Object {}}
            hideModal={[Function]}
            isRequestMade={false}
            onSubmit={[Function]}
            open={false}
            states={Array []}
          />,
          <Connect(EventFormModal)
            errors={Object {}}
            hideModal={[Function]}
            isRequestMade={false}
            onSubmit={[Function]}
            open={false}
          />,
          <Confirm
            isRequestMade={false}
            message="Are you sure you want to delete this center"
            onCancel={[Function]}
            onConfirm={[Function]}
            open={false}
            title="Delete Center"
          />,
        ],
        "className": "background",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              null,
              null,
            ],
            "className": "my-container",
          },
          "ref": null,
          "rendered": Array [
            null,
            null,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "center": null,
            "errors": Object {},
            "hideModal": [Function],
            "isRequestMade": false,
            "onSubmit": [Function],
            "open": false,
            "states": Array [],
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "errors": Object {},
            "hideModal": [Function],
            "isRequestMade": false,
            "onSubmit": [Function],
            "open": false,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "isRequestMade": false,
            "message": "Are you sure you want to delete this center",
            "onCancel": [Function],
            "onConfirm": [Function],
            "open": false,
            "title": "Delete Center",
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
      ],
      "type": "div",
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="background"
        >
          <div
            className="my-container"
          />
          <Connect(CenterFormModal)
            center={null}
            errors={Object {}}
            hideModal={[Function]}
            isRequestMade={false}
            onSubmit={[Function]}
            open={false}
            states={Array []}
          />
          <Connect(EventFormModal)
            errors={Object {}}
            hideModal={[Function]}
            isRequestMade={false}
            onSubmit={[Function]}
            open={false}
          />
          <Confirm
            isRequestMade={false}
            message="Are you sure you want to delete this center"
            onCancel={[Function]}
            onConfirm={[Function]}
            open={false}
            title="Delete Center"
          />
        </div>,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="my-container"
            />,
            <Connect(CenterFormModal)
              center={null}
              errors={Object {}}
              hideModal={[Function]}
              isRequestMade={false}
              onSubmit={[Function]}
              open={false}
              states={Array []}
            />,
            <Connect(EventFormModal)
              errors={Object {}}
              hideModal={[Function]}
              isRequestMade={false}
              onSubmit={[Function]}
              open={false}
            />,
            <Confirm
              isRequestMade={false}
              message="Are you sure you want to delete this center"
              onCancel={[Function]}
              onConfirm={[Function]}
              open={false}
              title="Delete Center"
            />,
          ],
          "className": "background",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                null,
                null,
              ],
              "className": "my-container",
            },
            "ref": null,
            "rendered": Array [
              null,
              null,
            ],
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "center": null,
              "errors": Object {},
              "hideModal": [Function],
              "isRequestMade": false,
              "onSubmit": [Function],
              "open": false,
              "states": Array [],
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "errors": Object {},
              "hideModal": [Function],
              "isRequestMade": false,
              "onSubmit": [Function],
              "open": false,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "isRequestMade": false,
              "message": "Are you sure you want to delete this center",
              "onCancel": [Function],
              "onConfirm": [Function],
              "open": false,
              "title": "Delete Center",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
