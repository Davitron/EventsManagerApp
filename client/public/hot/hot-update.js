webpackHotUpdate(0,{76:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n}();\n\nvar _axios = __webpack_require__(58);\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _universalCookie = __webpack_require__(100);\n\nvar _universalCookie2 = _interopRequireDefault(_universalCookie);\n\nvar _mainActionTypes = __webpack_require__(135);\n\nvar _mainActionTypes2 = _interopRequireDefault(_mainActionTypes);\n\nvar _dispatch = __webpack_require__(137);\n\nvar _dispatch2 = _interopRequireDefault(_dispatch);\n\nvar _logger = __webpack_require__(33);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _toast = __webpack_require__(37);\n\nvar _toast2 = _interopRequireDefault(_toast);\n\nvar _history = __webpack_require__(26);\n\nvar _history2 = _interopRequireDefault(_history);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar CLOUDINARY_URL = 'https://api.cloudinary.com/v1_1/eventsmanager/upload';\nvar CLOUDINARY_UPLOAD_PRESET = 'uq5d6tkk';\n\nvar cookies = new _universalCookie2.default();\n\n/**\n *\n */\n\nvar CenterActions = function () {\n  function CenterActions() {\n    _classCallCheck(this, CenterActions);\n  }\n\n  _createClass(CenterActions, null, [{\n    key: 'handleImageUpload',\n\n    /**\n     *\n     * @param {object} file - Image to be uploaded\n     * @returns {object} - cloudinary api response\n     */\n    value: function handleImageUpload(file) {\n      var formData = new FormData();\n      formData.append('file', file);\n      formData.append('upload_preset', CLOUDINARY_UPLOAD_PRESET);\n      return (0, _axios2.default)({\n        url: CLOUDINARY_URL,\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded'\n        },\n        data: formData\n      }).then(function (response) {\n        console.log(response.data);\n        return response.data.url;\n      }).catch(function (error) {\n        return error.response;\n      });\n    }\n    /**\n     *@returns {*}\n     * this action is handles fetching all centers\n     */\n\n  }, {\n    key: 'getAll',\n    value: function getAll() {\n      var token = cookies.get('jwt-events-manager');\n      return function (dispatch) {\n        dispatch(_dispatch2.default.action(_mainActionTypes2.default.GETALL_REQUEST, null));\n        (0, _axios2.default)({\n          method: 'GET',\n          url: '/api/v1/centers',\n          headers: {\n            'x-access-token': token\n          }\n        }).then(function (response) {\n          console.log(response.data);\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.GETALL_SUCCESS, response.data));\n        }).catch(function (error) {\n          var err = error.response.data;\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.GETALL_FAILED, err));\n        });\n      };\n    }\n\n    /**\n     *@returns {*}\n     * this action is handles fetching all states\n     */\n\n  }, {\n    key: 'getAllStates',\n    value: function getAllStates() {\n      var token = cookies.get('jwt-events-manager');\n      return function (dispatch) {\n        dispatch(_dispatch2.default.action(_mainActionTypes2.default.GETSTATES_REQUEST, []));\n        (0, _axios2.default)({\n          method: 'GET',\n          url: '/api/v1/states',\n          headers: {\n            'x-access-token': token\n          }\n        }).then(function (response) {\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.GETSTATES_SUCCESS, response.data));\n        }).catch(function (error) {\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.GETSTATES_FAILED, error.response.data));\n        });\n      };\n    }\n\n    /**\n     *\n     * @param {*} newCenter\n     *@returns {*}\n     * this action is handles creating a center\n     */\n\n  }, {\n    key: 'createCenter',\n    value: function createCenter(newCenter) {\n      var token = cookies.get('jwt-events-manager');\n      var facilitiesString = newCenter.facilities.join();\n      return function (dispatch) {\n        dispatch(_dispatch2.default.action(_mainActionTypes2.default.CREATE_REQUEST, newCenter));\n        CenterActions.handleImageUpload(newCenter.image).then(function (imageUrl) {\n          newCenter.image = imageUrl;\n          newCenter.facilities = facilitiesString;\n          (0, _axios2.default)({\n            method: 'POST',\n            url: '/api/v1/centers',\n            headers: {\n              'x-access-token': token\n            },\n            data: newCenter\n          }).then(function (response) {\n            _toast2.default.remove();\n            _toast2.default.success(response.data.message);\n            dispatch(_dispatch2.default.action(_mainActionTypes2.default.CREATE_SUCCESS, response.data.message));\n          }).catch(function (error) {\n            var message = error.response.data.message;\n\n            _toast2.default.remove();\n            _toast2.default.error(message);\n            dispatch(_dispatch2.default.action(_mainActionTypes2.default.CREATE_FAILED, message));\n          });\n        }).catch(function (error) {\n          _toast2.default.error('Image upload error');\n        });\n      };\n    }\n\n    /**\n     *\n     * @param {*} centerObj\n     * @returns {*}\n     * this action is handles updating a center\n     */\n\n  }, {\n    key: 'updateCenter',\n    value: function updateCenter(centerObj) {\n      var token = cookies.get('jwt-events-manager');\n      var facilitiesString = centerObj.facilities.join();\n      centerObj.facilities = facilitiesString;\n      return function (dispatch) {\n        dispatch(_dispatch2.default.action(_mainActionTypes2.default.UPDATE_REQUEST, centerObj));\n        if (typeof centerObj.image !== 'string') {\n          CenterActions.handleImageUpload(centerObj.image).then(function (imageUrl) {\n            centerObj.image = imageUrl;\n            (0, _axios2.default)({\n              method: 'PUT',\n              url: '/api/v1/centers/' + centerObj.id,\n              headers: {\n                'x-access-token': token\n              },\n              data: centerObj\n            }).then(function (response) {\n              _toast2.default.success(response.data.message);\n              dispatch(_dispatch2.default.action(_mainActionTypes2.default.UPDATE_SUCCESS, response.data.message));\n            }).catch(function (error) {\n              var message = error.response.data.message.message;\n\n              _toast2.default.error(message);\n              dispatch(_dispatch2.default.action(_mainActionTypes2.default.UPDATE_FAILED, message));\n            });\n          }).catch(function (error) {\n            _toast2.default.error('Image upload error');\n          });\n        } else {\n          (0, _axios2.default)({\n            method: 'PUT',\n            url: '/api/v1/centers/' + centerObj.id,\n            headers: {\n              'x-access-token': token\n            },\n            data: centerObj\n          }).then(function (response) {\n            _toast2.default.success(response.data.message);\n            dispatch(_dispatch2.default.action(_mainActionTypes2.default.UPDATE_SUCCESS, response.data.message));\n          }).catch(function (error) {\n            var message = error.response.data.message.message;\n\n            _toast2.default.error(message);\n            dispatch(_dispatch2.default.action(_mainActionTypes2.default.UPDATE_FAILED, message));\n          });\n        }\n      };\n      // const formData = new FormData();\n      // formData.append('name', centerObj.name);\n      // formData.append('stateId', centerObj.stateId);\n      // formData.append('address', centerObj.address);\n      // formData.append('hallCapacity', centerObj.hallCapacity);\n      // formData.append('carParkCapacity', centerObj.carParkCapacity);\n      // formData.append('image', centerObj.image);\n      // formData.append('facilities', facilitiesStr);\n      // formData.append('price', centerObj.price);\n\n      // return (dispatch) => {\n      //   dispatch(Dispatcher.action(mainActionType.UPDATE_REQUEST, centerObj));\n      //   axios({\n      //     method: 'PUT',\n      //     url: `/api/v1/centers/${centerObj.id}`,\n      //     headers: {\n      //       'x-access-token': token\n      //     },\n      //     data: formData\n      //   })\n      //     .then((response) => {\n      //       Toast.success(response.data.message);\n      //       dispatch(Dispatcher.action(mainActionType.UPDATE_SUCCESS, response.data.message));\n      //     })\n      //     .catch((error) => {\n      //       const { message } = error.response.data.message;\n      //       Toast.error(message);\n      //       dispatch(Dispatcher.action(mainActionType.UPDATE_FAILED, message));\n      //     });\n      // };\n    }\n    /**\n     *\n     * @param {*} param\n     * @returns {*}\n     * this action handles searching for centers\n     */\n\n  }, {\n    key: 'search',\n    value: function search(param) {\n      return function (dispatch) {\n        dispatch(_dispatch2.default.action(_mainActionTypes2.default.SEARCH_REQUEST, param));\n        (0, _axios2.default)({\n          method: 'POST',\n          url: '/api/v1/searchcenter',\n          data: param\n        }).then(function (response) {\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.SEARCH_SUCCESS, response.data));\n        }).catch(function (error) {\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.SEARCH_FAILURE, error.response.data));\n        });\n      };\n    }\n\n    /**\n     *\n     * @param {*} id\n     * @returns {*}\n     * this action is handles deleting a center\n    */\n\n  }, {\n    key: 'deleteCenter',\n    value: function deleteCenter(id) {\n      var token = cookies.get('jwt-events-manager');\n      return function (dispatch) {\n        dispatch(_dispatch2.default.action(_mainActionTypes2.default.DELETE_REQUEST, id));\n        (0, _axios2.default)({\n          method: 'DELETE',\n          url: '/api/v1/centers/' + id,\n          headers: {\n            'x-access-token': token\n          }\n        }).then(function (response) {\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.DELETE_SUCCESS, response.data.message));\n          _toast2.default.success(response.data.message);\n          _history2.default.push('/centers');\n        }).catch(function (error) {\n          var message = error.response.data.message;\n\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.DELETE_FAILED, message));\n          _toast2.default.error(message);\n        });\n      };\n    }\n  }]);\n\n  return CenterActions;\n}();\n\nexports.default = CenterActions;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///76\n")}});