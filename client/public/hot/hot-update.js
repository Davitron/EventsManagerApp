webpackHotUpdate(0,{

/***/ 91:
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _axios = __webpack_require__(165);\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _universalCookie = __webpack_require__(88);\n\nvar _universalCookie2 = _interopRequireDefault(_universalCookie);\n\nvar _centerActionType = __webpack_require__(144);\n\nvar _centerActionType2 = _interopRequireDefault(_centerActionType);\n\nvar _baseUrl = __webpack_require__(401);\n\nvar _baseUrl2 = _interopRequireDefault(_baseUrl);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar cookies = new _universalCookie2.default();\nvar token = cookies.get('jwt-events-manager');\n\n/**\n *\n */\n\nvar CenterActions = function () {\n  function CenterActions() {\n    _classCallCheck(this, CenterActions);\n  }\n\n  _createClass(CenterActions, [{\n    key: 'getAll',\n\n    /**\n     *@returns {*}\n     * this action is handles fetching all centers\n     */\n    value: function getAll() {\n      var request = function request() {\n        var requestAction = { type: _centerActionType2.default.GETALL_REQUEST };\n        return requestAction;\n      };\n      var success = function success(centers) {\n        var successAction = { type: _centerActionType2.default.GETALL_SUCCESS, centers: centers };\n        return successAction;\n      };\n      var failure = function failure(error) {\n        var failureAction = { type: _centerActionType2.default.GETALL_FAILED, error: error };\n        return failureAction;\n      };\n      return function (dispatch) {\n        dispatch(request());\n        (0, _axios2.default)({\n          method: 'GET',\n          url: '/api/v1/centers',\n          headers: {\n            'x-access-token': token\n          }\n        }).then(function (result) {\n          dispatch(success(result.data));\n        }).catch(function (error) {\n          console.log(error.response);\n          dispatch(failure(error.response.data));\n        });\n      };\n    }\n\n    /**\n     *@returns {*}\n     * this action is handles fetching all states\n     */\n\n  }, {\n    key: 'getAllStates',\n    value: function getAllStates() {\n      var request = function request() {\n        var requestAction = { type: _centerActionType2.default.GETSTATES_REQUEST };\n        return requestAction;\n      };\n      var success = function success(states) {\n        var successAction = { type: _centerActionType2.default.GETSTATES_SUCCESS, states: states };\n        return successAction;\n      };\n      var failure = function failure(error) {\n        var failureAction = { type: _centerActionType2.default.GETSTATES_FAILED, error: error };\n        return failureAction;\n      };\n      return function (dispatch) {\n        dispatch(request());\n        (0, _axios2.default)({\n          method: 'GET',\n          url: '/api/v1/states',\n          headers: {\n            'x-access-token': token\n          }\n        }).then(function (result) {\n          dispatch(success(result.data));\n        }).catch(function (error) {\n          console.log(error.response);\n          dispatch(failure(error.response.data));\n        });\n      };\n    }\n\n    /**\n     *\n     * @param {*} newCenter\n     *@returns {*}\n     * this action is handles creating a center\n     */\n\n  }, {\n    key: 'createCenter',\n    value: function createCenter(newCenter) {\n      var request = function request(center) {\n        var requestAction = { type: _centerActionType2.default.CREATE_REQUEST, center: center };\n        return requestAction;\n      };\n      var success = function success(center) {\n        var successAction = { type: _centerActionType2.default.CREATE_SUCCESS, center: center };\n        return successAction;\n      };\n      var failure = function failure(error) {\n        var failureAction = { type: _centerActionType2.default.CREATE_FAILED, error: error };\n        return failureAction;\n      };\n\n      var facilitiesStr = newCenter.facilities.join();\n      var formData = new FormData();\n      formData.append('name', newCenter.name);\n      formData.append('stateId', newCenter.stateId);\n      formData.append('address', newCenter.address);\n      formData.append('hallCapacity', newCenter.hallCapacity);\n      formData.append('carParkCapacity', newCenter.carParkCapacity);\n      formData.append('image', newCenter.image);\n      formData.append('facilities', facilitiesStr);\n      formData.append('price', newCenter.price);\n\n      return function (dispatch) {\n        dispatch(request(newCenter));\n        (0, _axios2.default)({\n          method: 'POST',\n          url: '/api/v1/centers',\n          headers: {\n            'x-access-token': token\n          },\n          data: formData\n        }).then(function (result) {\n          dispatch(success(result.data));\n          window.location.reload();\n        }).catch(function (error) {\n          console.log(error.response);\n          dispatch(failure(error.response.data));\n        });\n      };\n    }\n\n    /**\n     *\n     * @param {*} centerObj\n     * @returns {*}\n     * this action is handles updating a center\n     */\n\n  }, {\n    key: 'updateCenter',\n    value: function updateCenter(centerObj) {\n      var request = function request(center) {\n        var requestAction = { type: _centerActionType2.default.UPDATE_REQUEST, center: center };\n        return requestAction;\n      };\n      var success = function success(center) {\n        var successAction = { type: _centerActionType2.default.UPDATE_SUCCESS, center: center };\n        return successAction;\n      };\n      var failure = function failure(error) {\n        var failureAction = { type: _centerActionType2.default.UPDATE_FAILED, error: error };\n        return failureAction;\n      };\n\n      var facilitiesStr = centerObj.facilities.join();\n      var formData = new FormData();\n      formData.append('name', centerObj.name);\n      formData.append('stateId', centerObj.stateId);\n      formData.append('address', centerObj.address);\n      formData.append('hallCapacity', centerObj.hallCapacity);\n      formData.append('carParkCapacity', centerObj.carParkCapacity);\n      formData.append('image', centerObj.image);\n      formData.append('facilities', facilitiesStr);\n      formData.append('price', centerObj.price);\n\n      return function (dispatch) {\n        dispatch(request(centerObj));\n        (0, _axios2.default)({\n          method: 'PUT',\n          url: '/api/v1/centers/' + centerObj.id,\n          headers: {\n            'x-access-token': token\n          },\n          data: formData\n        }).then(function (result) {\n          dispatch(success(result.data));\n          window.location.reload();\n        }).catch(function (error) {\n          console.log(error.response);\n          dispatch(failure(error.response.data));\n        });\n      };\n    }\n\n    /**\n     *\n     * @param {*} id\n     * @returns {*}\n     * this action is handles deleting a center\n    */\n\n  }, {\n    key: 'deleteCenter',\n    value: function deleteCenter(id) {\n      var request = function request(centerId) {\n        var requestAction = { type: _centerActionType2.default.DELETE_REQUEST, centerId: centerId };\n        return requestAction;\n      };\n      var success = function success(centerId) {\n        var successAction = { type: _centerActionType2.default.DELETE_SUCCESS, centerId: centerId };\n        return successAction;\n      };\n      var failure = function failure(error) {\n        var failureAction = { type: _centerActionType2.default.DELETE_FAILED, error: error };\n        return failureAction;\n      };\n\n      return function (dispatch) {\n        dispatch(request(id));\n        (0, _axios2.default)({\n          method: 'DELETE',\n          url: '/api/v1/centers/' + id,\n          headers: {\n            'x-access-token': token\n          }\n        }).then(function (result) {\n          dispatch(success(result.data));\n          window.location.reload();\n        }).catch(function (error) {\n          dispatch(failure(error.response));\n        });\n      };\n    }\n  }]);\n\n  return CenterActions;\n}();\n\nexports.default = CenterActions;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///91\n");

/***/ })

})