webpackHotUpdate(0,{83:function(module,exports,__webpack_require__){"use strict";eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if (\"value\" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;\n  };\n}();\n\nvar _axios = __webpack_require__(57);\n\nvar _axios2 = _interopRequireDefault(_axios);\n\nvar _universalCookie = __webpack_require__(101);\n\nvar _universalCookie2 = _interopRequireDefault(_universalCookie);\n\nvar _mainActionTypes = __webpack_require__(136);\n\nvar _mainActionTypes2 = _interopRequireDefault(_mainActionTypes);\n\nvar _dispatch = __webpack_require__(138);\n\nvar _dispatch2 = _interopRequireDefault(_dispatch);\n\nvar _logger = __webpack_require__(33);\n\nvar _logger2 = _interopRequireDefault(_logger);\n\nvar _toast = __webpack_require__(37);\n\nvar _toast2 = _interopRequireDefault(_toast);\n\nvar _history = __webpack_require__(25);\n\nvar _history2 = _interopRequireDefault(_history);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : { default: obj };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar cookies = new _universalCookie2.default();\n// const token = cookies.get('jwt-events-manager');\n\n\n/**\n *\n */\n\nvar EventActions = function () {\n  function EventActions() {\n    _classCallCheck(this, EventActions);\n  }\n\n  _createClass(EventActions, null, [{\n    key: 'getAll',\n\n    /**\n     *@returns {*}\n     * this action is handles fetching all events\n     */\n    value: function getAll() {\n      return function (dispatch) {\n        var token = cookies.get('jwt-events-manager');\n        dispatch(_dispatch2.default.action(_mainActionTypes2.default.GETALL_REQUEST, null));\n        (0, _axios2.default)({\n          method: 'GET',\n          url: '/api/v1/events',\n          headers: {\n            'x-access-token': token\n          }\n        }).then(function (response) {\n          _toast2.default.success(response.data.message);\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.GETALL_SUCCESS, response.data));\n        }).catch(function (error) {\n          // console.log(error.response);\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.GETALL_FAILED, error.response.data));\n        });\n      };\n    }\n\n    /**\n     *@param {*} centerId\n     *@returns {*}\n     * this action is handles fetching all events\n     */\n\n  }, {\n    key: 'getPendingEvent',\n    value: function getPendingEvent(centerId) {\n      return function (dispatch) {\n        var token = cookies.get('jwt-events-manager');\n        dispatch(_dispatch2.default.action(_mainActionTypes2.default.GETALL_REQUEST, null));\n        (0, _axios2.default)({\n          method: 'GET',\n          url: '/api/v1/events/pending/' + centerId,\n          headers: {\n            'x-access-token': token\n          }\n        }).then(function (response) {\n          _logger2.default.log(response.data);\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.GETALL_SUCCESS, response.data));\n          if (response.data.pendingEvents.length === 0) {\n            _toast2.default.info('There are no pending events for this center.');\n          }\n        }).catch(function (error) {\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.GETALL_FAILED, error.response.data));\n        });\n      };\n    }\n\n    /**\n     *@param {*} centerId\n     *@returns {*}\n     * this action is handles fetching all events\n     */\n\n  }, {\n    key: 'getUpcomingEvent',\n    value: function getUpcomingEvent(centerId) {\n      var token = cookies.get('jwt-events-manager');\n      return function (dispatch) {\n        dispatch(_dispatch2.default.action(_mainActionTypes2.default.GETALL_REQUEST, null));\n        (0, _axios2.default)({\n          method: 'GET',\n          url: '/api/v1/events/upcoming/' + centerId,\n          headers: {\n            'x-access-token': token\n          }\n        }).then(function (response) {\n          _logger2.default.log(response.data);\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.GETALL_SUCCESS, response.data));\n          // if (response.data.pendingEvents.length === 0) {\n          //   Toast.info('There are no pending events for this center.');\n          // }\n        }).catch(function (error) {\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.GETALL_FAILED, error.response.data));\n        });\n      };\n    }\n\n    /**\n     *\n     * @param {*} newEvent\n     *@returns {*}\n     * this action is handles creating a event\n     */\n\n  }, {\n    key: 'createEvent',\n    value: function createEvent(newEvent) {\n      var token = cookies.get('jwt-events-manager');\n      return function (dispatch) {\n        dispatch(_dispatch2.default.action(_mainActionTypes2.default.CREATE_REQUEST, newEvent));\n        (0, _axios2.default)({\n          method: 'POST',\n          url: '/api/v1/events',\n          headers: {\n            'x-access-token': token\n          },\n          data: newEvent\n        }).then(function (response) {\n          var message = response.data.message;\n\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.CREATE_SUCCESS, message));\n          _toast2.default.success(message);\n        }).catch(function (error) {\n          var message = error.response.data.message;\n\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.CREATE_FAILED, message));\n          _toast2.default.error(message);\n        });\n      };\n    }\n\n    /**\n     *\n     * @param {*} eventObj\n     * @returns {*}\n     * this action is handles updating a event\n     */\n\n  }, {\n    key: 'updateEvent',\n    value: function updateEvent(eventObj) {\n      return function (dispatch) {\n        var token = cookies.get('jwt-events-manager');\n        dispatch(_dispatch2.default.action(_mainActionTypes2.default.UPDATE_REQUEST, eventObj));\n        (0, _axios2.default)({\n          method: 'PUT',\n          url: '/api/v1/events/' + eventObj.id,\n          headers: {\n            'x-access-token': token\n          },\n          data: eventObj\n        }).then(function (response) {\n          console.log(response.data);\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.UPDATE_SUCCESS, response.data.message));\n          _toast2.default.success(response.data.message);\n        }).catch(function (error) {\n          var message = error.response.data.message;\n\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.UPDATE_FAILED, message));\n          _toast2.default.error(message);\n        });\n      };\n    }\n\n    /**\n     *\n     * @param {*} eventId\n     * @returns {*}\n     * this action is handles updating a event\n     */\n\n  }, {\n    key: 'approveEvent',\n    value: function approveEvent(eventId) {\n      return function (dispatch) {\n        var token = cookies.get('jwt-events-manager');\n        dispatch(_dispatch2.default.action(_mainActionTypes2.default.UPDATE_REQUEST, eventId));\n        (0, _axios2.default)({\n          method: 'PUT',\n          url: '/api/v1/events/approve/' + eventId,\n          headers: {\n            'x-access-token': token\n          }\n        }).then(function (response) {\n          console.log(response.data);\n          var message = response.data.message;\n\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.UPDATE_SUCCESS, message));\n          _toast2.default.success(message);\n        }).then(function () {\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.RESET_STATE, null));\n        }).catch(function (error) {\n          var message = error.response.data.message;\n\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.UPDATE_FAILED, message));\n          _toast2.default.error(message);\n        });\n      };\n    }\n\n    /**\n     *\n     * @param {*} eventId\n     * @returns {*}\n     * this action is handles updating a event\n     */\n\n  }, {\n    key: 'rejectEvent',\n    value: function rejectEvent(eventId) {\n      return function (dispatch) {\n        var token = cookies.get('jwt-events-manager');\n        dispatch(_dispatch2.default.action(_mainActionTypes2.default.UPDATE_REQUEST, eventId));\n        (0, _axios2.default)({\n          method: 'PUT',\n          url: '/api/v1/events/reject/' + eventId,\n          headers: {\n            'x-access-token': token\n          }\n        }).then(function (response) {\n          var message = response.data.message;\n\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.UPDATE_SUCCESS, message));\n          _toast2.default.success(message);\n        }).then(function () {\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.RESET_STATE, null));\n        }).catch(function (error) {\n          var message = error.response.data.message;\n\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.UPDATE_FAILED, message));\n          _toast2.default.error(message);\n        });\n      };\n    }\n\n    /**\n     *\n     * @param {*} id\n     * @returns {*}\n     * this action is handles deleting a event\n    */\n\n  }, {\n    key: 'deleteEvent',\n    value: function deleteEvent(id) {\n      return function (dispatch) {\n        var token = cookies.get('jwt-events-manager');\n        dispatch(_dispatch2.default.action(_mainActionTypes2.default.DELETE_REQUEST, id));\n        (0, _axios2.default)({\n          method: 'DELETE',\n          url: '/api/v1/events/' + id,\n          headers: {\n            'x-access-token': token\n          }\n        }).then(function (response) {\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.DELETE_SUCCESS, response.data));\n          _toast2.default.success(response.data.message);\n        }).catch(function (error) {\n          var message = error.response.data.message;\n\n          dispatch(_dispatch2.default.action(_mainActionTypes2.default.DELETE_FAILED, message));\n          _toast2.default.error(message);\n        });\n      };\n    }\n  }]);\n\n  return EventActions;\n}();\n\nexports.default = EventActions;//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///83\n")}});